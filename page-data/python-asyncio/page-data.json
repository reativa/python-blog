{"componentChunkName":"component---src-templates-blog-post-js","path":"/python-asyncio/","result":{"data":{"site":{"siteMetadata":{"title":"Python para impacientes"}},"markdownRemark":{"id":"82a8ba28-9d39-52e3-818d-d398576a4dd1","excerpt":"======= asyncio.run New in Python 3.7 Future like object Future like object  other task Patch loop runner  Put blocking task into Executor Socket with asyncioâ€¦","html":"<p>=======</p>\n<h2>asyncio.run</h2>\n<p><strong>New in Python 3.7</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> asyncio\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">from</span> concurrent<span class=\"token punctuation\">.</span>futures <span class=\"token keyword\">import</span> ThreadPoolExecutor\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> e <span class=\"token operator\">=</span> ThreadPoolExecutor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">read_file</span><span class=\"token punctuation\">(</span>file_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     loop <span class=\"token operator\">=</span> asyncio<span class=\"token punctuation\">.</span>get_event_loop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>file_<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">await</span> loop<span class=\"token punctuation\">.</span>run_in_executor<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> ret <span class=\"token operator\">=</span> asyncio<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>read_file<span class=\"token punctuation\">(</span><span class=\"token string\">'/etc/passwd'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Future like object</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> sys\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> PY_35 <span class=\"token operator\">=</span> sys<span class=\"token punctuation\">.</span>version_info <span class=\"token operator\">>=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> asyncio\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> loop <span class=\"token operator\">=</span> asyncio<span class=\"token punctuation\">.</span>get_event_loop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SlowObj</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"__init__\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         self<span class=\"token punctuation\">.</span>_n <span class=\"token operator\">=</span> n\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">if</span> PY_35<span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">def</span> <span class=\"token function\">__await__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"__await__ sleep({})\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>_n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             <span class=\"token keyword\">yield</span> <span class=\"token keyword\">from</span> asyncio<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>_n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ok\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             <span class=\"token keyword\">return</span> self\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     obj <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> SlowObj<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> loop<span class=\"token punctuation\">.</span>run_until_complete<span class=\"token punctuation\">(</span>main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n__init__\n__await__ sleep<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\nok</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Future like object <code class=\"language-text\">__await__</code> other task</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> sys\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> PY_35 <span class=\"token operator\">=</span> sys<span class=\"token punctuation\">.</span>version_info <span class=\"token operator\">>=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> asyncio\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> loop <span class=\"token operator\">=</span> asyncio<span class=\"token punctuation\">.</span>get_event_loop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">slow_task</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">await</span> asyncio<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SlowObj</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"__init__\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         self<span class=\"token punctuation\">.</span>_n <span class=\"token operator\">=</span> n\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">if</span> PY_35<span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">def</span> <span class=\"token function\">__await__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"__await__\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             <span class=\"token keyword\">yield</span> <span class=\"token keyword\">from</span> slow_task<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>_n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__await__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             <span class=\"token keyword\">yield</span> <span class=\"token keyword\">from</span> asyncio<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>_n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ok\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             <span class=\"token keyword\">return</span> self\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     obj <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> SlowObj<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> loop<span class=\"token punctuation\">.</span>run_until_complete<span class=\"token punctuation\">(</span>main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n__init__\n__await__\nok</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Patch loop runner <code class=\"language-text\">_run_once</code></h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> asyncio\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">_run_once</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     num_tasks <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>_scheduled<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"num tasks in queue: {}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>num_tasks<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>asyncio<span class=\"token punctuation\">.</span>SelectorEventLoop<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>_run_once<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> EventLoop <span class=\"token operator\">=</span> asyncio<span class=\"token punctuation\">.</span>SelectorEventLoop\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> EventLoop<span class=\"token punctuation\">.</span>_run_once <span class=\"token operator\">=</span> _run_once\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> loop <span class=\"token operator\">=</span> EventLoop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> asyncio<span class=\"token punctuation\">.</span>set_event_loop<span class=\"token punctuation\">(</span>loop<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">task</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">await</span> asyncio<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sleep: {} sec\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> coro <span class=\"token operator\">=</span> loop<span class=\"token punctuation\">.</span>create_task<span class=\"token punctuation\">(</span>task<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> loop<span class=\"token punctuation\">.</span>run_until_complete<span class=\"token punctuation\">(</span>coro<span class=\"token punctuation\">)</span>\nnum tasks <span class=\"token keyword\">in</span> queue<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span>\nnum tasks <span class=\"token keyword\">in</span> queue<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\nnum tasks <span class=\"token keyword\">in</span> queue<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span>\nsleep<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span> sec\nnum tasks <span class=\"token keyword\">in</span> queue<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> loop<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Put blocking task into Executor</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> asyncio\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">from</span> concurrent<span class=\"token punctuation\">.</span>futures <span class=\"token keyword\">import</span> ThreadPoolExecutor\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> e <span class=\"token operator\">=</span> ThreadPoolExecutor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> loop <span class=\"token operator\">=</span> asyncio<span class=\"token punctuation\">.</span>get_event_loop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">read_file</span><span class=\"token punctuation\">(</span>file_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>file_<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         data <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> loop<span class=\"token punctuation\">.</span>run_in_executor<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">return</span> data\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> task <span class=\"token operator\">=</span> loop<span class=\"token punctuation\">.</span>create_task<span class=\"token punctuation\">(</span>read_file<span class=\"token punctuation\">(</span><span class=\"token string\">'/etc/passwd'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> ret <span class=\"token operator\">=</span> loop<span class=\"token punctuation\">.</span>run_until_complete<span class=\"token punctuation\">(</span>task<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Socket with asyncio</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> asyncio\n<span class=\"token keyword\">import</span> socket\n\nhost <span class=\"token operator\">=</span> <span class=\"token string\">'localhost'</span>\nport <span class=\"token operator\">=</span> <span class=\"token number\">9527</span>\nloop <span class=\"token operator\">=</span> asyncio<span class=\"token punctuation\">.</span>get_event_loop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ns <span class=\"token operator\">=</span> socket<span class=\"token punctuation\">.</span>socket<span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">.</span>AF_INET<span class=\"token punctuation\">,</span> socket<span class=\"token punctuation\">.</span>SOCK_STREAM<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\ns<span class=\"token punctuation\">.</span>setsockopt<span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">.</span>SOL_SOCKET<span class=\"token punctuation\">,</span> socket<span class=\"token punctuation\">.</span>SO_REUSEADDR<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\ns<span class=\"token punctuation\">.</span>setblocking<span class=\"token punctuation\">(</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\ns<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ns<span class=\"token punctuation\">.</span>listen<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">handler</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        msg <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> loop<span class=\"token punctuation\">.</span>sock_recv<span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">,</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> msg<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n        <span class=\"token keyword\">await</span> loop<span class=\"token punctuation\">.</span>sock_sendall<span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">)</span>\n    conn<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">server</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        conn<span class=\"token punctuation\">,</span> addr <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> loop<span class=\"token punctuation\">.</span>sock_accept<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n        loop<span class=\"token punctuation\">.</span>create_task<span class=\"token punctuation\">(</span>handler<span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nloop<span class=\"token punctuation\">.</span>create_task<span class=\"token punctuation\">(</span>server<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nloop<span class=\"token punctuation\">.</span>run_forever<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nloop<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>output: (bash 1)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">$ nc localhost 9527\nHello\nHello</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>output: (bash 2)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">$ nc localhost 9527\nWorld\nWorld</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<h2>Event Loop with polling</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># using selectors</span>\n<span class=\"token comment\"># ref: PyCon 2015 - David Beazley</span>\n\n<span class=\"token keyword\">import</span> asyncio\n<span class=\"token keyword\">import</span> socket\n<span class=\"token keyword\">import</span> selectors\n<span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> deque\n\n@asyncio<span class=\"token punctuation\">.</span>coroutine\n<span class=\"token keyword\">def</span> <span class=\"token function\">read_wait</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">yield</span> <span class=\"token string\">'read_wait'</span><span class=\"token punctuation\">,</span> s\n\n@asyncio<span class=\"token punctuation\">.</span>coroutine\n<span class=\"token keyword\">def</span> <span class=\"token function\">write_wait</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">yield</span> <span class=\"token string\">'write_wait'</span><span class=\"token punctuation\">,</span> s\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Loop</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"Simple loop prototype\"\"\"</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>ready <span class=\"token operator\">=</span> deque<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>selector <span class=\"token operator\">=</span> selectors<span class=\"token punctuation\">.</span>DefaultSelector<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    @asyncio<span class=\"token punctuation\">.</span>coroutine\n    <span class=\"token keyword\">def</span> <span class=\"token function\">sock_accept</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">yield</span> <span class=\"token keyword\">from</span> read_wait<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> s<span class=\"token punctuation\">.</span>accept<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    @asyncio<span class=\"token punctuation\">.</span>coroutine\n    <span class=\"token keyword\">def</span> <span class=\"token function\">sock_recv</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> mb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">yield</span> <span class=\"token keyword\">from</span> read_wait<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> c<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>mb<span class=\"token punctuation\">)</span>\n\n    @asyncio<span class=\"token punctuation\">.</span>coroutine\n    <span class=\"token keyword\">def</span> <span class=\"token function\">sock_sendall</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">while</span> m<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">yield</span> <span class=\"token keyword\">from</span> write_wait<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span>\n            nsent <span class=\"token operator\">=</span> c<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span>\n            m <span class=\"token operator\">=</span> m<span class=\"token punctuation\">[</span>nsent<span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">create_task</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> coro<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>ready<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>coro<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">run_forever</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>_run_once<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">_run_once</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">while</span> <span class=\"token keyword\">not</span> self<span class=\"token punctuation\">.</span>ready<span class=\"token punctuation\">:</span>\n            events <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>selector<span class=\"token punctuation\">.</span>select<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span> _ <span class=\"token keyword\">in</span> events<span class=\"token punctuation\">:</span>\n                self<span class=\"token punctuation\">.</span>ready<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\n                self<span class=\"token punctuation\">.</span>selector<span class=\"token punctuation\">.</span>unregister<span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">.</span>fileobj<span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">while</span> self<span class=\"token punctuation\">.</span>ready<span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>cur_t <span class=\"token operator\">=</span> ready<span class=\"token punctuation\">.</span>popleft<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n                op<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>a <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>cur_t<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span>\n                <span class=\"token builtin\">getattr</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> op<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>a<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">except</span> StopIteration<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">pass</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">read_wait</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>selector<span class=\"token punctuation\">.</span>register<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> selectors<span class=\"token punctuation\">.</span>EVENT_READ<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>cur_t<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">write_wait</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>selector<span class=\"token punctuation\">.</span>register<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> selectors<span class=\"token punctuation\">.</span>EVENT_WRITE<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>cur_t<span class=\"token punctuation\">)</span>\n\nloop <span class=\"token operator\">=</span> Loop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nhost <span class=\"token operator\">=</span> <span class=\"token string\">'localhost'</span>\nport <span class=\"token operator\">=</span> <span class=\"token number\">9527</span>\n\ns <span class=\"token operator\">=</span> socket<span class=\"token punctuation\">.</span>socket<span class=\"token punctuation\">(</span>\n        socket<span class=\"token punctuation\">.</span>AF_INET<span class=\"token punctuation\">,</span>\n        socket<span class=\"token punctuation\">.</span>SOCK_STREAM<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\ns<span class=\"token punctuation\">.</span>setsockopt<span class=\"token punctuation\">(</span>\n        socket<span class=\"token punctuation\">.</span>SOL_SOCKET<span class=\"token punctuation\">,</span>\n        socket<span class=\"token punctuation\">.</span>SO_REUSEADDR<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\ns<span class=\"token punctuation\">.</span>setblocking<span class=\"token punctuation\">(</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\ns<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ns<span class=\"token punctuation\">.</span>listen<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n\n@asyncio<span class=\"token punctuation\">.</span>coroutine\n<span class=\"token keyword\">def</span> <span class=\"token function\">handler</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        msg <span class=\"token operator\">=</span> <span class=\"token keyword\">yield</span> <span class=\"token keyword\">from</span> loop<span class=\"token punctuation\">.</span>sock_recv<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> msg<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n        <span class=\"token keyword\">yield</span> <span class=\"token keyword\">from</span> loop<span class=\"token punctuation\">.</span>sock_sendall<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">)</span>\n    c<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n@asyncio<span class=\"token punctuation\">.</span>coroutine\n<span class=\"token keyword\">def</span> <span class=\"token function\">server</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        c<span class=\"token punctuation\">,</span> addr <span class=\"token operator\">=</span> <span class=\"token keyword\">yield</span> <span class=\"token keyword\">from</span> loop<span class=\"token punctuation\">.</span>sock_accept<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n        loop<span class=\"token punctuation\">.</span>create_task<span class=\"token punctuation\">(</span>handler<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nloop<span class=\"token punctuation\">.</span>create_task<span class=\"token punctuation\">(</span>server<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nloop<span class=\"token punctuation\">.</span>run_forever<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Transport and Protocol</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> asyncio\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">EchoProtocol</span><span class=\"token punctuation\">(</span>asyncio<span class=\"token punctuation\">.</span>Protocol<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">connection_made</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> transport<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        peername <span class=\"token operator\">=</span> transport<span class=\"token punctuation\">.</span>get_extra_info<span class=\"token punctuation\">(</span><span class=\"token string\">'peername'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Connection from {}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>peername<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>transport <span class=\"token operator\">=</span> transport\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">data_received</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        msg <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>transport<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n\nloop <span class=\"token operator\">=</span> asyncio<span class=\"token punctuation\">.</span>get_event_loop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ncoro <span class=\"token operator\">=</span> loop<span class=\"token punctuation\">.</span>create_server<span class=\"token punctuation\">(</span>EchoProtocol<span class=\"token punctuation\">,</span> <span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5566</span><span class=\"token punctuation\">)</span>\nserver <span class=\"token operator\">=</span> loop<span class=\"token punctuation\">.</span>run_until_complete<span class=\"token punctuation\">(</span>coro<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    loop<span class=\"token punctuation\">.</span>run_forever<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n    loop<span class=\"token punctuation\">.</span>run_until_complete<span class=\"token punctuation\">(</span>server<span class=\"token punctuation\">.</span>wait_closed<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n    loop<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>output:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token comment\"># console 1</span>\n$ <span class=\"token function\">nc</span> localhost <span class=\"token number\">5566</span>\nHello\nHello\n\n<span class=\"token comment\"># console 2</span>\n$ <span class=\"token function\">nc</span> localhost <span class=\"token number\">5566</span>\nWorld\nWorld</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Transport and Protocol with SSL</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> asyncio\n<span class=\"token keyword\">import</span> ssl\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">make_header</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    head <span class=\"token operator\">=</span> <span class=\"token string\">b\"HTTP/1.1 200 OK\\r\\n\"</span>\n    head <span class=\"token operator\">+=</span> <span class=\"token string\">b\"Content-Type: text/html\\r\\n\"</span>\n    head <span class=\"token operator\">+=</span> <span class=\"token string\">b\"\\r\\n\"</span>\n    <span class=\"token keyword\">return</span> head\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">make_body</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    resp <span class=\"token operator\">=</span> <span class=\"token string\">b\"&lt;html>\"</span>\n    resp <span class=\"token operator\">+=</span> <span class=\"token string\">b\"&lt;h1>Hello SSL&lt;/h1>\"</span>\n    resp <span class=\"token operator\">+=</span> <span class=\"token string\">b\"&lt;/html>\"</span>\n    <span class=\"token keyword\">return</span> resp\n\n\nsslctx <span class=\"token operator\">=</span> ssl<span class=\"token punctuation\">.</span>SSLContext<span class=\"token punctuation\">(</span>ssl<span class=\"token punctuation\">.</span>PROTOCOL_SSLv23<span class=\"token punctuation\">)</span>\nsslctx<span class=\"token punctuation\">.</span>load_cert_chain<span class=\"token punctuation\">(</span>\n    certfile<span class=\"token operator\">=</span><span class=\"token string\">\"./root-ca.crt\"</span><span class=\"token punctuation\">,</span> keyfile<span class=\"token operator\">=</span><span class=\"token string\">\"./root-ca.key\"</span>\n<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Service</span><span class=\"token punctuation\">(</span>asyncio<span class=\"token punctuation\">.</span>Protocol<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">connection_made</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> tr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>tr <span class=\"token operator\">=</span> tr\n        self<span class=\"token punctuation\">.</span>total <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">data_received</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> data<span class=\"token punctuation\">:</span>\n            resp <span class=\"token operator\">=</span> make_header<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            resp <span class=\"token operator\">+=</span> make_body<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>tr<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>tr<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    server <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> loop<span class=\"token punctuation\">.</span>create_server<span class=\"token punctuation\">(</span>\n        Service<span class=\"token punctuation\">,</span> <span class=\"token string\">\"localhost\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4433</span><span class=\"token punctuation\">,</span> ssl<span class=\"token operator\">=</span>sslctx\n    <span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">await</span> server<span class=\"token punctuation\">.</span>wait_closed<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    loop <span class=\"token operator\">=</span> asyncio<span class=\"token punctuation\">.</span>get_event_loop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    loop<span class=\"token punctuation\">.</span>run_until_complete<span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n    loop<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>output:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ openssl genrsa -out root-ca.key <span class=\"token number\">2048</span>\n$ openssl req -x509 -new -nodes -key root-ca.key -days <span class=\"token number\">365</span> -out root-ca.crt\n$ python3 ssl_web_server.py\n\n<span class=\"token comment\"># then open browser: https://localhost:4433</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Asynchronous Iterator</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># ref: PEP-0492</span>\n<span class=\"token comment\"># need Python >= 3.5</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AsyncIter</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> it<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         self<span class=\"token punctuation\">.</span>_it <span class=\"token operator\">=</span> <span class=\"token builtin\">iter</span><span class=\"token punctuation\">(</span>it<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">def</span> <span class=\"token function\">__aiter__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">return</span> self\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">__anext__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">await</span> asyncio<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             val <span class=\"token operator\">=</span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>_it<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">except</span> StopIteration<span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             <span class=\"token keyword\">raise</span> StopAsyncIteration\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">return</span> val\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     it <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">async</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> AsyncIter<span class=\"token punctuation\">(</span>it<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> loop <span class=\"token operator\">=</span> asyncio<span class=\"token punctuation\">.</span>get_event_loop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> loop<span class=\"token punctuation\">.</span>run_until_complete<span class=\"token punctuation\">(</span>foo<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">1</span>\n<span class=\"token number\">2</span>\n<span class=\"token number\">3</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>What is asynchronous iterator</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> asyncio\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AsyncIter</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> it<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         self<span class=\"token punctuation\">.</span>_it <span class=\"token operator\">=</span> <span class=\"token builtin\">iter</span><span class=\"token punctuation\">(</span>it<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">def</span> <span class=\"token function\">__aiter__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">return</span> self\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">__anext__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">await</span> asyncio<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             val <span class=\"token operator\">=</span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>_it<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">except</span> StopIteration<span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             <span class=\"token keyword\">raise</span> StopAsyncIteration\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">return</span> val\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     _ <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     running <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     it <span class=\"token operator\">=</span> AsyncIter<span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">while</span> running<span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             res <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> it<span class=\"token punctuation\">.</span>__anext__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">except</span> StopAsyncIteration<span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             running <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> loop <span class=\"token operator\">=</span> asyncio<span class=\"token punctuation\">.</span>get_event_loop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> loop<span class=\"token punctuation\">.</span>run_until_complete<span class=\"token punctuation\">(</span>loop<span class=\"token punctuation\">.</span>create_task<span class=\"token punctuation\">(</span>foo<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">1</span>\n<span class=\"token number\">2</span>\n<span class=\"token number\">3</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Asynchronous context manager</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># ref: PEP-0492</span>\n<span class=\"token comment\"># need Python >= 3.5</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AsyncCtxMgr</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">__aenter__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">await</span> asyncio<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"__anter__\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">return</span> self\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">__aexit__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>exc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">await</span> asyncio<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"__aexit__\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">async</span> <span class=\"token keyword\">with</span> AsyncCtxMgr<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> m<span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello block\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">world</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"world block\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> t <span class=\"token operator\">=</span> loop<span class=\"token punctuation\">.</span>create_task<span class=\"token punctuation\">(</span>world<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> loop<span class=\"token punctuation\">.</span>run_until_complete<span class=\"token punctuation\">(</span>hello<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nworld block\n__anter__\nhello block\n__aexit__</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>What is asynchronous context manager</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> asyncio\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AsyncManager</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">__aenter__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">await</span> asyncio<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"__aenter__\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">__aexit__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>exc_info<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">await</span> asyncio<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"__aexit__\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">import</span> sys\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     mgr <span class=\"token operator\">=</span> AsyncManager<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">await</span> mgr<span class=\"token punctuation\">.</span>__aenter__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"body\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">await</span> mgr<span class=\"token punctuation\">.</span>__aexit__<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>sys<span class=\"token punctuation\">.</span>exc_info<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> loop <span class=\"token operator\">=</span> asyncio<span class=\"token punctuation\">.</span>get_event_loop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> loop<span class=\"token punctuation\">.</span>run_until_complete<span class=\"token punctuation\">(</span>loop<span class=\"token punctuation\">.</span>create_task<span class=\"token punctuation\">(</span>foo<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n__aenter__\nbody\n__aexit__</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>decorator <code class=\"language-text\">@asynccontextmanager</code></h2>\n<p><strong>New in Python 3.7</strong></p>\n<ul>\n<li>Issue <a href=\"https://bugs.python.org/issue29679\">29679</a> - Add\n@contextlib.asynccontextmanager</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> asyncio\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">from</span> contextlib <span class=\"token keyword\">import</span> asynccontextmanager\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> @asynccontextmanager\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">coro</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">await</span> asyncio<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">yield</span> msg\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">await</span> asyncio<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'done'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">async</span> <span class=\"token keyword\">with</span> coro<span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> m<span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">await</span> asyncio<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> loop <span class=\"token operator\">=</span> asyncio<span class=\"token punctuation\">.</span>get_event_loop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> loop<span class=\"token punctuation\">.</span>run_until_complete<span class=\"token punctuation\">(</span>main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nHello\ndone</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Simple asyncio connection pool</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> asyncio\n<span class=\"token keyword\">import</span> socket\n<span class=\"token keyword\">import</span> uuid\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Transport</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> loop<span class=\"token punctuation\">,</span> host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>used <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n\n        self<span class=\"token punctuation\">.</span>_loop <span class=\"token operator\">=</span> loop\n        self<span class=\"token punctuation\">.</span>_host <span class=\"token operator\">=</span> host\n        self<span class=\"token punctuation\">.</span>_port <span class=\"token operator\">=</span> port\n        self<span class=\"token punctuation\">.</span>_sock <span class=\"token operator\">=</span> socket<span class=\"token punctuation\">.</span>socket<span class=\"token punctuation\">(</span>\n                socket<span class=\"token punctuation\">.</span>AF_INET<span class=\"token punctuation\">,</span> socket<span class=\"token punctuation\">.</span>SOCK_STREAM<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>_sock<span class=\"token punctuation\">.</span>setblocking<span class=\"token punctuation\">(</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>_uuid <span class=\"token operator\">=</span> uuid<span class=\"token punctuation\">.</span>uuid1<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        loop<span class=\"token punctuation\">,</span> sock <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_loop<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>_sock\n        host<span class=\"token punctuation\">,</span> port <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_host<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>_port\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">await</span> loop<span class=\"token punctuation\">.</span>sock_connect<span class=\"token punctuation\">(</span>sock<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">sendall</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        loop<span class=\"token punctuation\">,</span> sock <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_loop<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>_sock\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">await</span> loop<span class=\"token punctuation\">.</span>sock_sendall<span class=\"token punctuation\">(</span>sock<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">recv</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> buf_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        loop<span class=\"token punctuation\">,</span> sock <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_loop<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>_sock\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">await</span> loop<span class=\"token punctuation\">.</span>sock_recv<span class=\"token punctuation\">(</span>sock<span class=\"token punctuation\">,</span> buf_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>_sock<span class=\"token punctuation\">:</span> self<span class=\"token punctuation\">.</span>_sock<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    @<span class=\"token builtin\">property</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">alive</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        ret <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span> <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>_sock <span class=\"token keyword\">else</span> <span class=\"token boolean\">False</span>\n        <span class=\"token keyword\">return</span> ret\n\n    @<span class=\"token builtin\">property</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">uuid</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>_uuid\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ConnectionPool</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> loop<span class=\"token punctuation\">,</span> host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">,</span> max_conn<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>_host <span class=\"token operator\">=</span> host\n        self<span class=\"token punctuation\">.</span>_port <span class=\"token operator\">=</span> port\n        self<span class=\"token punctuation\">.</span>_max_conn <span class=\"token operator\">=</span> max_conn\n        self<span class=\"token punctuation\">.</span>_loop <span class=\"token operator\">=</span> loop\n\n        conns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>Transport<span class=\"token punctuation\">(</span>loop<span class=\"token punctuation\">,</span> host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>max_conn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>_conns <span class=\"token operator\">=</span> conns\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__await__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> _c <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>_conns<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">yield</span> <span class=\"token keyword\">from</span> _c<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__await__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> self\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">getconn</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> fut<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> fut <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n            fut <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_loop<span class=\"token punctuation\">.</span>create_future<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">for</span> _c <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>_conns<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> _c<span class=\"token punctuation\">.</span>alive <span class=\"token keyword\">and</span> <span class=\"token keyword\">not</span> _c<span class=\"token punctuation\">.</span>used<span class=\"token punctuation\">:</span>\n                _c<span class=\"token punctuation\">.</span>used <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n                fut<span class=\"token punctuation\">.</span>set_result<span class=\"token punctuation\">(</span>_c<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">break</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            loop<span class=\"token punctuation\">.</span>call_soon<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>getconn<span class=\"token punctuation\">,</span> fut<span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">return</span> fut\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">release</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> conn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> conn<span class=\"token punctuation\">.</span>used<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span>\n        <span class=\"token keyword\">for</span> _c <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>_conns<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> _c<span class=\"token punctuation\">.</span>uuid <span class=\"token operator\">!=</span> conn<span class=\"token punctuation\">.</span>uuid<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">continue</span>\n            _c<span class=\"token punctuation\">.</span>used <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n            <span class=\"token keyword\">break</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">close</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> _c <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>_conns<span class=\"token punctuation\">:</span>\n            _c<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">handler</span><span class=\"token punctuation\">(</span>pool<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    conn <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> pool<span class=\"token punctuation\">.</span>getconn<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    byte <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> conn<span class=\"token punctuation\">.</span>sendall<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span>\n    mesg <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> conn<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span>\n    pool<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'echo: {}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>mesg<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>loop<span class=\"token punctuation\">,</span> host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># creat connection pool</span>\n        pool <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> ConnectionPool<span class=\"token punctuation\">(</span>loop<span class=\"token punctuation\">,</span> host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># generate messages</span>\n        msgs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'coro_{}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n        <span class=\"token comment\"># create tasks</span>\n        fs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>loop<span class=\"token punctuation\">.</span>create_task<span class=\"token punctuation\">(</span>handler<span class=\"token punctuation\">(</span>pool<span class=\"token punctuation\">,</span> _m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _m <span class=\"token keyword\">in</span> msgs<span class=\"token punctuation\">]</span>\n\n        <span class=\"token comment\"># wait all tasks done</span>\n        done<span class=\"token punctuation\">,</span> pending <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> asyncio<span class=\"token punctuation\">.</span>wait<span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> done<span class=\"token punctuation\">:</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n        pool<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\nloop <span class=\"token operator\">=</span> asyncio<span class=\"token punctuation\">.</span>get_event_loop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nhost <span class=\"token operator\">=</span> <span class=\"token string\">'127.0.0.1'</span>\nport <span class=\"token operator\">=</span> <span class=\"token number\">9527</span>\n\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    loop<span class=\"token punctuation\">.</span>run_until_complete<span class=\"token punctuation\">(</span>main<span class=\"token punctuation\">(</span>loop<span class=\"token punctuation\">,</span> host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> KeyboardInterrupt<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">pass</span>\n<span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n    loop<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>output:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ ncat -l <span class=\"token number\">9527</span> --keep-open --exec <span class=\"token string\">\"/bin/cat\"</span> <span class=\"token operator\">&amp;</span>\n$ python3 conn_pool.py\necho: b<span class=\"token string\">'coro_1'</span>\necho: b<span class=\"token string\">'coro_0'</span>\necho: b<span class=\"token string\">'coro_2'</span>\necho: b<span class=\"token string\">'coro_3'</span>\necho: b<span class=\"token string\">'coro_4'</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Get domain name</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> asyncio\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">getaddrinfo</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     loop <span class=\"token operator\">=</span> asyncio<span class=\"token punctuation\">.</span>get_event_loop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">await</span> loop<span class=\"token punctuation\">.</span>getaddrinfo<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> addrs <span class=\"token operator\">=</span> asyncio<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>getaddrinfo<span class=\"token punctuation\">(</span><span class=\"token string\">'github.com'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">443</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> a <span class=\"token keyword\">in</span> addrs<span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     family<span class=\"token punctuation\">,</span> typ<span class=\"token punctuation\">,</span> proto<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> sockaddr <span class=\"token operator\">=</span> a\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>sockaddr<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">(</span><span class=\"token string\">'192.30.253.113'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">443</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span><span class=\"token string\">'192.30.253.113'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">443</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span><span class=\"token string\">'192.30.253.112'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">443</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span><span class=\"token string\">'192.30.253.112'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">443</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Gather Results</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> asyncio\n<span class=\"token keyword\">import</span> ssl\n\n\npath <span class=\"token operator\">=</span> ssl<span class=\"token punctuation\">.</span>get_default_verify_paths<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nsslctx <span class=\"token operator\">=</span> ssl<span class=\"token punctuation\">.</span>SSLContext<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nsslctx<span class=\"token punctuation\">.</span>verify_mode <span class=\"token operator\">=</span> ssl<span class=\"token punctuation\">.</span>CERT_REQUIRED\nsslctx<span class=\"token punctuation\">.</span>check_hostname <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\nsslctx<span class=\"token punctuation\">.</span>load_verify_locations<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span>cafile<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    r<span class=\"token punctuation\">,</span> w <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> asyncio<span class=\"token punctuation\">.</span>open_connection<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">,</span> ssl<span class=\"token operator\">=</span>sslctx<span class=\"token punctuation\">)</span>\n    req <span class=\"token operator\">=</span> <span class=\"token string\">\"GET / HTTP/1.1\\r\\n\"</span>\n    req <span class=\"token operator\">+=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"Host: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>host<span class=\"token punctuation\">}</span></span><span class=\"token string\">\\r\\n\"</span></span>\n    req <span class=\"token operator\">+=</span> <span class=\"token string\">\"Connection: close\\r\\n\"</span>\n    req <span class=\"token operator\">+=</span> <span class=\"token string\">\"\\r\\n\"</span>\n\n    <span class=\"token comment\"># send request</span>\n    w<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># recv response</span>\n    resp <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        line <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> r<span class=\"token punctuation\">.</span>readline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> line<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n        line <span class=\"token operator\">=</span> line<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span>\n        resp <span class=\"token operator\">+=</span> line\n\n    <span class=\"token comment\"># close writer</span>\n    w<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">await</span> w<span class=\"token punctuation\">.</span>wait_closed<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> resp\n\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    loop <span class=\"token operator\">=</span> asyncio<span class=\"token punctuation\">.</span>get_running_loop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    url <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"python.org\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"github.com\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"google.com\"</span><span class=\"token punctuation\">]</span>\n    fut <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>fetch<span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">,</span> <span class=\"token number\">443</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> u <span class=\"token keyword\">in</span> url<span class=\"token punctuation\">]</span>\n    resps <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> asyncio<span class=\"token punctuation\">.</span>gather<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>fut<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> r <span class=\"token keyword\">in</span> resps<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n\nasyncio<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>output:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ python fetch.py\nHTTP/1.1 <span class=\"token number\">301</span> Moved Permanently\nHTTP/1.1 <span class=\"token number\">200</span> OK\nHTTP/1.1 <span class=\"token number\">301</span> Moved Permanently</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Simple asyncio UDP echo server</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> asyncio\n<span class=\"token keyword\">import</span> socket\n\nloop <span class=\"token operator\">=</span> asyncio<span class=\"token punctuation\">.</span>get_event_loop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nsock <span class=\"token operator\">=</span> socket<span class=\"token punctuation\">.</span>socket<span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">.</span>AF_INET<span class=\"token punctuation\">,</span> socket<span class=\"token punctuation\">.</span>SOCK_DGRAM<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nsock<span class=\"token punctuation\">.</span>setsockopt<span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">.</span>SOL_SOCKET<span class=\"token punctuation\">,</span> socket<span class=\"token punctuation\">.</span>SO_REUSEADDR<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\nsock<span class=\"token punctuation\">.</span>setblocking<span class=\"token punctuation\">(</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n\nhost <span class=\"token operator\">=</span> <span class=\"token string\">'localhost'</span>\nport <span class=\"token operator\">=</span> <span class=\"token number\">3553</span>\n\nsock<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">recvfrom</span><span class=\"token punctuation\">(</span>loop<span class=\"token punctuation\">,</span> sock<span class=\"token punctuation\">,</span> n_bytes<span class=\"token punctuation\">,</span> fut<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> registed<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    fd <span class=\"token operator\">=</span> sock<span class=\"token punctuation\">.</span>fileno<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> fut <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        fut <span class=\"token operator\">=</span> loop<span class=\"token punctuation\">.</span>create_future<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> registed<span class=\"token punctuation\">:</span>\n        loop<span class=\"token punctuation\">.</span>remove_reader<span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        data<span class=\"token punctuation\">,</span> addr <span class=\"token operator\">=</span> sock<span class=\"token punctuation\">.</span>recvfrom<span class=\"token punctuation\">(</span>n_bytes<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span> <span class=\"token punctuation\">(</span>BlockingIOError<span class=\"token punctuation\">,</span> InterruptedError<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        loop<span class=\"token punctuation\">.</span>add_reader<span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">,</span> recvfrom<span class=\"token punctuation\">,</span> loop<span class=\"token punctuation\">,</span> sock<span class=\"token punctuation\">,</span> n_bytes<span class=\"token punctuation\">,</span> fut<span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        fut<span class=\"token punctuation\">.</span>set_result<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> fut\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">sendto</span><span class=\"token punctuation\">(</span>loop<span class=\"token punctuation\">,</span> sock<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">,</span> addr<span class=\"token punctuation\">,</span> fut<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> registed<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    fd <span class=\"token operator\">=</span> sock<span class=\"token punctuation\">.</span>fileno<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> fut <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        fut <span class=\"token operator\">=</span> loop<span class=\"token punctuation\">.</span>create_future<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> registed<span class=\"token punctuation\">:</span>\n        loop<span class=\"token punctuation\">.</span>remove_writer<span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> data<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span>\n\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        n <span class=\"token operator\">=</span> sock<span class=\"token punctuation\">.</span>sendto<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> addr<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span> <span class=\"token punctuation\">(</span>BlockingIOError<span class=\"token punctuation\">,</span> InterruptedError<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        loop<span class=\"token punctuation\">.</span>add_writer<span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">,</span> sendto<span class=\"token punctuation\">,</span> loop<span class=\"token punctuation\">,</span> sock<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">,</span> addr<span class=\"token punctuation\">,</span> fut<span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        fut<span class=\"token punctuation\">.</span>set_result<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> fut\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">udp_server</span><span class=\"token punctuation\">(</span>loop<span class=\"token punctuation\">,</span> sock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        data<span class=\"token punctuation\">,</span> addr <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> recvfrom<span class=\"token punctuation\">(</span>loop<span class=\"token punctuation\">,</span> sock<span class=\"token punctuation\">,</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span>\n        n_bytes <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> sendto<span class=\"token punctuation\">(</span>loop<span class=\"token punctuation\">,</span> sock<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">,</span> addr<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    loop<span class=\"token punctuation\">.</span>run_until_complete<span class=\"token punctuation\">(</span>udp_server<span class=\"token punctuation\">(</span>loop<span class=\"token punctuation\">,</span> sock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n    loop<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>output:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ python3 udp_server.py\n$ <span class=\"token function\">nc</span> -u localhost <span class=\"token number\">3553</span>\nHello UDP\nHello UDP</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Simple asyncio Web server</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> asyncio\n<span class=\"token keyword\">import</span> socket\n\nhost <span class=\"token operator\">=</span> <span class=\"token string\">'localhost'</span>\nport <span class=\"token operator\">=</span> <span class=\"token number\">9527</span>\ns <span class=\"token operator\">=</span> socket<span class=\"token punctuation\">.</span>socket<span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">.</span>AF_INET<span class=\"token punctuation\">,</span> socket<span class=\"token punctuation\">.</span>SOCK_STREAM<span class=\"token punctuation\">)</span>\ns<span class=\"token punctuation\">.</span>setsockopt<span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">.</span>SOL_SOCKET<span class=\"token punctuation\">,</span> socket<span class=\"token punctuation\">.</span>SO_REUSEADDR<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\ns<span class=\"token punctuation\">.</span>setblocking<span class=\"token punctuation\">(</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\ns<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ns<span class=\"token punctuation\">.</span>listen<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n\nloop <span class=\"token operator\">=</span> asyncio<span class=\"token punctuation\">.</span>get_event_loop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">make_header</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    header  <span class=\"token operator\">=</span> <span class=\"token string\">b\"HTTP/1.1 200 OK\\r\\n\"</span>\n    header <span class=\"token operator\">+=</span> <span class=\"token string\">b\"Content-Type: text/html\\r\\n\"</span>\n    header <span class=\"token operator\">+=</span> <span class=\"token string\">b\"\\r\\n\"</span>\n    <span class=\"token keyword\">return</span> header\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">make_body</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    resp  <span class=\"token operator\">=</span> <span class=\"token string\">b'&lt;html>'</span>\n    resp <span class=\"token operator\">+=</span> <span class=\"token string\">b'&lt;body>&lt;h3>Hello World&lt;/h3>&lt;/body>'</span>\n    resp <span class=\"token operator\">+=</span> <span class=\"token string\">b'&lt;/html>'</span>\n    <span class=\"token keyword\">return</span> resp\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">handler</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    req <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> loop<span class=\"token punctuation\">.</span>sock_recv<span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">,</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> req<span class=\"token punctuation\">:</span>\n        resp <span class=\"token operator\">=</span> make_header<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        resp <span class=\"token operator\">+=</span> make_body<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">await</span> loop<span class=\"token punctuation\">.</span>sock_sendall<span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">,</span> resp<span class=\"token punctuation\">)</span>\n    conn<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">server</span><span class=\"token punctuation\">(</span>sock<span class=\"token punctuation\">,</span> loop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        conn<span class=\"token punctuation\">,</span> addr <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> loop<span class=\"token punctuation\">.</span>sock_accept<span class=\"token punctuation\">(</span>sock<span class=\"token punctuation\">)</span>\n        loop<span class=\"token punctuation\">.</span>create_task<span class=\"token punctuation\">(</span>handler<span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    loop<span class=\"token punctuation\">.</span>run_until_complete<span class=\"token punctuation\">(</span>server<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> loop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> KeyboardInterrupt<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">pass</span>\n<span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n    loop<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    s<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># Then open browser with url: localhost:9527</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Simple HTTPS Web Server</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> asyncio\n<span class=\"token keyword\">import</span> ssl\n\nctx <span class=\"token operator\">=</span> ssl<span class=\"token punctuation\">.</span>SSLContext<span class=\"token punctuation\">(</span>ssl<span class=\"token punctuation\">.</span>PROTOCOL_TLS_SERVER<span class=\"token punctuation\">)</span>\nctx<span class=\"token punctuation\">.</span>load_cert_chain<span class=\"token punctuation\">(</span><span class=\"token string\">'crt.pem'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'key.pem'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">conn</span><span class=\"token punctuation\">(</span>reader<span class=\"token punctuation\">,</span> writer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    _ <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> reader<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span>\n    head <span class=\"token operator\">=</span> <span class=\"token string\">b\"HTTP/1.1 200 OK\\r\\n\"</span>\n    head <span class=\"token operator\">+=</span> <span class=\"token string\">b\"Content-Type: text/html\\r\\n\"</span>\n    head <span class=\"token operator\">+=</span> <span class=\"token string\">b\"\\r\\n\"</span>\n\n    body <span class=\"token operator\">=</span> <span class=\"token string\">b\"&lt;!doctype html>\"</span>\n    body <span class=\"token operator\">+=</span> <span class=\"token string\">b\"&lt;html>\"</span>\n    body <span class=\"token operator\">+=</span> <span class=\"token string\">b\"&lt;body>&lt;h1>Awesome Python&lt;/h1>&lt;/body>\"</span>\n    body <span class=\"token operator\">+=</span> <span class=\"token string\">b\"&lt;/html>\"</span>\n\n    writer<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>head <span class=\"token operator\">+</span> body<span class=\"token punctuation\">)</span>\n    writer<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    srv <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> asyncio<span class=\"token punctuation\">.</span>start_server<span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">,</span> host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">,</span> ssl<span class=\"token operator\">=</span>ctx<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">async</span> <span class=\"token keyword\">with</span> srv<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">await</span> srv<span class=\"token punctuation\">.</span>serve_forever<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nasyncio<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>main<span class=\"token punctuation\">(</span><span class=\"token string\">'0.0.0.0'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Simple HTTPS Web server (low-level api)</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> asyncio\n<span class=\"token keyword\">import</span> socket\n<span class=\"token keyword\">import</span> ssl\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">make_header</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    head  <span class=\"token operator\">=</span> <span class=\"token string\">b'HTTP/1.1 200 OK\\r\\n'</span>\n    head <span class=\"token operator\">+=</span> <span class=\"token string\">b'Content-type: text/html\\r\\n'</span>\n    head <span class=\"token operator\">+=</span> <span class=\"token string\">b'\\r\\n'</span>\n    <span class=\"token keyword\">return</span> head\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">make_body</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    resp  <span class=\"token operator\">=</span> <span class=\"token string\">b'&lt;html>'</span>\n    resp <span class=\"token operator\">+=</span> <span class=\"token string\">b'&lt;h1>Hello SSL&lt;/h1>'</span>\n    resp <span class=\"token operator\">+=</span> <span class=\"token string\">b'&lt;/html>'</span>\n    <span class=\"token keyword\">return</span> resp\n\nsock <span class=\"token operator\">=</span> socket<span class=\"token punctuation\">.</span>socket<span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">.</span>AF_INET<span class=\"token punctuation\">,</span> socket<span class=\"token punctuation\">.</span>SOCK_STREAM<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nsock<span class=\"token punctuation\">.</span>setsockopt<span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">.</span>SOL_SOCKET<span class=\"token punctuation\">,</span> socket<span class=\"token punctuation\">.</span>SO_REUSEADDR<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\nsock<span class=\"token punctuation\">.</span>setblocking<span class=\"token punctuation\">(</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\nsock<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'localhost'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">4433</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsock<span class=\"token punctuation\">.</span>listen<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n\nsslctx <span class=\"token operator\">=</span> ssl<span class=\"token punctuation\">.</span>SSLContext<span class=\"token punctuation\">(</span>ssl<span class=\"token punctuation\">.</span>PROTOCOL_SSLv23<span class=\"token punctuation\">)</span>\nsslctx<span class=\"token punctuation\">.</span>load_cert_chain<span class=\"token punctuation\">(</span>certfile<span class=\"token operator\">=</span><span class=\"token string\">'./root-ca.crt'</span><span class=\"token punctuation\">,</span>\n                       keyfile<span class=\"token operator\">=</span><span class=\"token string\">'./root-ca.key'</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">do_handshake</span><span class=\"token punctuation\">(</span>loop<span class=\"token punctuation\">,</span> sock<span class=\"token punctuation\">,</span> waiter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    sock_fd <span class=\"token operator\">=</span> sock<span class=\"token punctuation\">.</span>fileno<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        sock<span class=\"token punctuation\">.</span>do_handshake<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span> ssl<span class=\"token punctuation\">.</span>SSLWantReadError<span class=\"token punctuation\">:</span>\n        loop<span class=\"token punctuation\">.</span>remove_reader<span class=\"token punctuation\">(</span>sock_fd<span class=\"token punctuation\">)</span>\n        loop<span class=\"token punctuation\">.</span>add_reader<span class=\"token punctuation\">(</span>sock_fd<span class=\"token punctuation\">,</span> do_handshake<span class=\"token punctuation\">,</span>\n                        loop<span class=\"token punctuation\">,</span> sock<span class=\"token punctuation\">,</span> waiter<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span>\n    <span class=\"token keyword\">except</span> ssl<span class=\"token punctuation\">.</span>SSLWantWriteError<span class=\"token punctuation\">:</span>\n        loop<span class=\"token punctuation\">.</span>remove_writer<span class=\"token punctuation\">(</span>sock_fd<span class=\"token punctuation\">)</span>\n        loop<span class=\"token punctuation\">.</span>add_writer<span class=\"token punctuation\">(</span>sock_fd<span class=\"token punctuation\">,</span> do_handshake<span class=\"token punctuation\">,</span>\n                        loop<span class=\"token punctuation\">,</span> sock<span class=\"token punctuation\">,</span> waiter<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span>\n\n    loop<span class=\"token punctuation\">.</span>remove_reader<span class=\"token punctuation\">(</span>sock_fd<span class=\"token punctuation\">)</span>\n    loop<span class=\"token punctuation\">.</span>remove_writer<span class=\"token punctuation\">(</span>sock_fd<span class=\"token punctuation\">)</span>\n    waiter<span class=\"token punctuation\">.</span>set_result<span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">handle_read</span><span class=\"token punctuation\">(</span>loop<span class=\"token punctuation\">,</span> conn<span class=\"token punctuation\">,</span> waiter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        req <span class=\"token operator\">=</span> conn<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span> ssl<span class=\"token punctuation\">.</span>SSLWantReadError<span class=\"token punctuation\">:</span>\n        loop<span class=\"token punctuation\">.</span>remove_reader<span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">.</span>fileno<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        loop<span class=\"token punctuation\">.</span>add_reader<span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">.</span>fileno<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> handle_read<span class=\"token punctuation\">,</span>\n                        loop<span class=\"token punctuation\">,</span> conn<span class=\"token punctuation\">,</span> waiter<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span>\n    loop<span class=\"token punctuation\">.</span>remove_reader<span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">.</span>fileno<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    waiter<span class=\"token punctuation\">.</span>set_result<span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">handle_write</span><span class=\"token punctuation\">(</span>loop<span class=\"token punctuation\">,</span> conn<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">,</span> waiter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        resp <span class=\"token operator\">=</span> make_header<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        resp <span class=\"token operator\">+=</span> make_body<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        ret <span class=\"token operator\">=</span> conn<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span> ssl<span class=\"token punctuation\">.</span>SSLWantReadError<span class=\"token punctuation\">:</span>\n        loop<span class=\"token punctuation\">.</span>remove_writer<span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">.</span>fileno<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        loop<span class=\"token punctuation\">.</span>add_writer<span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">.</span>fileno<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> handle_write<span class=\"token punctuation\">,</span>\n                        loop<span class=\"token punctuation\">,</span> conn<span class=\"token punctuation\">,</span> waiter<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span>\n    loop<span class=\"token punctuation\">.</span>remove_writer<span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">.</span>fileno<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    conn<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    waiter<span class=\"token punctuation\">.</span>set_result<span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">server</span><span class=\"token punctuation\">(</span>loop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        conn<span class=\"token punctuation\">,</span> addr <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> loop<span class=\"token punctuation\">.</span>sock_accept<span class=\"token punctuation\">(</span>sock<span class=\"token punctuation\">)</span>\n        conn<span class=\"token punctuation\">.</span>setblocking<span class=\"token punctuation\">(</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n        sslconn <span class=\"token operator\">=</span> sslctx<span class=\"token punctuation\">.</span>wrap_socket<span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">,</span>\n                                     server_side<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>\n                                     do_handshake_on_connect<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># wait SSL handshake</span>\n        waiter <span class=\"token operator\">=</span> loop<span class=\"token punctuation\">.</span>create_future<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        do_handshake<span class=\"token punctuation\">(</span>loop<span class=\"token punctuation\">,</span> sslconn<span class=\"token punctuation\">,</span> waiter<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">await</span> waiter\n\n        <span class=\"token comment\"># wait read request</span>\n        waiter <span class=\"token operator\">=</span> loop<span class=\"token punctuation\">.</span>create_future<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        handle_read<span class=\"token punctuation\">(</span>loop<span class=\"token punctuation\">,</span> sslconn<span class=\"token punctuation\">,</span> waiter<span class=\"token punctuation\">)</span>\n        msg <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> waiter\n\n        <span class=\"token comment\"># wait write response</span>\n        waiter <span class=\"token operator\">=</span> loop<span class=\"token punctuation\">.</span>create_future<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        handle_write<span class=\"token punctuation\">(</span>loop<span class=\"token punctuation\">,</span> sslconn<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">,</span> waiter<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">await</span> waiter\n\nloop <span class=\"token operator\">=</span> asyncio<span class=\"token punctuation\">.</span>get_event_loop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    loop<span class=\"token punctuation\">.</span>run_until_complete<span class=\"token punctuation\">(</span>server<span class=\"token punctuation\">(</span>loop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n    loop<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>output:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token comment\"># console 1</span>\n\n$ openssl genrsa -out root-ca.key <span class=\"token number\">2048</span>\n$ openssl req -x509 -new -nodes -key root-ca.key -days <span class=\"token number\">365</span> -out root-ca.crt\n$ python3 Simple_https_server.py\n\n<span class=\"token comment\"># console 2</span>\n\n$ <span class=\"token function\">curl</span> https://localhost:4433 -v          <span class=\"token punctuation\">\\</span>\n<span class=\"token operator\">></span>      --resolve localhost:4433:127.0.0.1 <span class=\"token punctuation\">\\</span>\n<span class=\"token operator\">></span>      --cacert ~/test/root-ca.crt</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>TLS Upgrade</h2>\n<p><strong>New in Python 3.7</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> asyncio\n<span class=\"token keyword\">import</span> ssl\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">HttpClient</span><span class=\"token punctuation\">(</span>asyncio<span class=\"token punctuation\">.</span>Protocol<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> on_con_lost<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>on_con_lost <span class=\"token operator\">=</span> on_con_lost\n        self<span class=\"token punctuation\">.</span>resp <span class=\"token operator\">=</span> <span class=\"token string\">b\"\"</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">data_received</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>resp <span class=\"token operator\">+=</span> data\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">connection_lost</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> exc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        resp <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>resp<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\r\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>on_con_lost<span class=\"token punctuation\">.</span>set_result<span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    paths <span class=\"token operator\">=</span> ssl<span class=\"token punctuation\">.</span>get_default_verify_paths<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    sslctx <span class=\"token operator\">=</span> ssl<span class=\"token punctuation\">.</span>SSLContext<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    sslctx<span class=\"token punctuation\">.</span>verify_mode <span class=\"token operator\">=</span> ssl<span class=\"token punctuation\">.</span>CERT_REQUIRED\n    sslctx<span class=\"token punctuation\">.</span>check_hostname <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n    sslctx<span class=\"token punctuation\">.</span>load_verify_locations<span class=\"token punctuation\">(</span>paths<span class=\"token punctuation\">.</span>cafile<span class=\"token punctuation\">)</span>\n\n    loop <span class=\"token operator\">=</span> asyncio<span class=\"token punctuation\">.</span>get_running_loop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    on_con_lost <span class=\"token operator\">=</span> loop<span class=\"token punctuation\">.</span>create_future<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    tr<span class=\"token punctuation\">,</span> proto <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> loop<span class=\"token punctuation\">.</span>create_connection<span class=\"token punctuation\">(</span>\n        <span class=\"token keyword\">lambda</span><span class=\"token punctuation\">:</span> HttpClient<span class=\"token punctuation\">(</span>on_con_lost<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"github.com\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">443</span>\n    <span class=\"token punctuation\">)</span>\n    new_tr <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> loop<span class=\"token punctuation\">.</span>start_tls<span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">,</span> proto<span class=\"token punctuation\">,</span> sslctx<span class=\"token punctuation\">)</span>\n    req <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"GET / HTTP/1.1\\r\\n\"</span></span>\n    req <span class=\"token operator\">+=</span> <span class=\"token string\">\"Host: github.com\\r\\n\"</span>\n    req <span class=\"token operator\">+=</span> <span class=\"token string\">\"Connection: close\\r\\n\"</span>\n    req <span class=\"token operator\">+=</span> <span class=\"token string\">\"\\r\\n\"</span>\n    new_tr<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">await</span> on_con_lost\n    new_tr<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\nasyncio<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>output:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ python3 --version\nPython <span class=\"token number\">3.7</span>.0\n$ python3 https.py\nHTTP/1.1 <span class=\"token number\">200</span> OK</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Using sendfile</h2>\n<p><strong>New in Python 3.7</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> asyncio\n\npath <span class=\"token operator\">=</span> <span class=\"token string\">\"index.html\"</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">conn</span><span class=\"token punctuation\">(</span>reader<span class=\"token punctuation\">,</span> writer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    loop <span class=\"token operator\">=</span> asyncio<span class=\"token punctuation\">.</span>get_event_loop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    _ <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> reader<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> <span class=\"token string\">\"rb\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n        tr <span class=\"token operator\">=</span> writer<span class=\"token punctuation\">.</span>transport\n        head <span class=\"token operator\">=</span> <span class=\"token string\">b\"HTTP/1.1 200 OK\\r\\n\"</span>\n        head <span class=\"token operator\">+=</span> <span class=\"token string\">b\"Content-Type: text/html\\r\\n\"</span>\n        head <span class=\"token operator\">+=</span> <span class=\"token string\">b\"\\r\\n\"</span>\n\n        tr<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>head<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">await</span> loop<span class=\"token punctuation\">.</span>sendfile<span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">)</span>\n        writer<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># run a simplle http server</span>\n    srv <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> asyncio<span class=\"token punctuation\">.</span>start_server<span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">,</span> host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">async</span> <span class=\"token keyword\">with</span> srv<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">await</span> srv<span class=\"token punctuation\">.</span>serve_forever<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nasyncio<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>main<span class=\"token punctuation\">(</span><span class=\"token string\">\"0.0.0.0\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>output:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'&lt;!doctype html>&lt;h1>Awesome Python&lt;/h1>'</span> <span class=\"token operator\">></span> index.html\n$ python http.py <span class=\"token operator\">&amp;</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token number\">60506</span>\n$ <span class=\"token function\">curl</span> http://localhost:8000\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>doctype html<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>h<span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>></span>Awesome Python<span class=\"token operator\">&lt;</span>/h<span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Simple asyncio WSGI web server</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># ref: PEP333</span>\n\n<span class=\"token keyword\">import</span> asyncio\n<span class=\"token keyword\">import</span> socket\n<span class=\"token keyword\">import</span> io\n<span class=\"token keyword\">import</span> sys\n\n<span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> Flask<span class=\"token punctuation\">,</span> Response\n\nhost <span class=\"token operator\">=</span> <span class=\"token string\">'localhost'</span>\nport <span class=\"token operator\">=</span> <span class=\"token number\">9527</span>\ns <span class=\"token operator\">=</span> socket<span class=\"token punctuation\">.</span>socket<span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">.</span>AF_INET<span class=\"token punctuation\">,</span> socket<span class=\"token punctuation\">.</span>SOCK_STREAM<span class=\"token punctuation\">)</span>\ns<span class=\"token punctuation\">.</span>setsockopt<span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">.</span>SOL_SOCKET<span class=\"token punctuation\">,</span> socket<span class=\"token punctuation\">.</span>SO_REUSEADDR<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\ns<span class=\"token punctuation\">.</span>setblocking<span class=\"token punctuation\">(</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\ns<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ns<span class=\"token punctuation\">.</span>listen<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n\nloop <span class=\"token operator\">=</span> asyncio<span class=\"token punctuation\">.</span>get_event_loop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">WSGIServer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> sock<span class=\"token punctuation\">,</span> app<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>_sock <span class=\"token operator\">=</span> sock\n        self<span class=\"token punctuation\">.</span>_app <span class=\"token operator\">=</span> app\n        self<span class=\"token punctuation\">.</span>_header <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">parse_request</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> req<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\" HTTP Request Format:\n\n        GET /hello.htm HTTP/1.1\\r\\n\n        Accept-Language: en-us\\r\\n\n        ...\n        Connection: Keep-Alive\\r\\n\n        \"\"\"</span>\n        <span class=\"token comment\"># bytes to string</span>\n        req_info <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span>\n        first_line <span class=\"token operator\">=</span> req_info<span class=\"token punctuation\">.</span>splitlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n        method<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">,</span> ver <span class=\"token operator\">=</span> first_line<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> method<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">,</span> ver\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get_environ</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> req<span class=\"token punctuation\">,</span> method<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        env <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\"># Required WSGI variables</span>\n        env<span class=\"token punctuation\">[</span><span class=\"token string\">'wsgi.version'</span><span class=\"token punctuation\">]</span>      <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        env<span class=\"token punctuation\">[</span><span class=\"token string\">'wsgi.url_scheme'</span><span class=\"token punctuation\">]</span>   <span class=\"token operator\">=</span> <span class=\"token string\">'http'</span>\n        env<span class=\"token punctuation\">[</span><span class=\"token string\">'wsgi.input'</span><span class=\"token punctuation\">]</span>        <span class=\"token operator\">=</span> req\n        env<span class=\"token punctuation\">[</span><span class=\"token string\">'wsgi.errors'</span><span class=\"token punctuation\">]</span>       <span class=\"token operator\">=</span> sys<span class=\"token punctuation\">.</span>stderr\n        env<span class=\"token punctuation\">[</span><span class=\"token string\">'wsgi.multithread'</span><span class=\"token punctuation\">]</span>  <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n        env<span class=\"token punctuation\">[</span><span class=\"token string\">'wsgi.multiprocess'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n        env<span class=\"token punctuation\">[</span><span class=\"token string\">'wsgi.run_once'</span><span class=\"token punctuation\">]</span>     <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n\n        <span class=\"token comment\"># Required CGI variables</span>\n        env<span class=\"token punctuation\">[</span><span class=\"token string\">'REQUEST_METHOD'</span><span class=\"token punctuation\">]</span>    <span class=\"token operator\">=</span> method    <span class=\"token comment\"># GET</span>\n        env<span class=\"token punctuation\">[</span><span class=\"token string\">'PATH_INFO'</span><span class=\"token punctuation\">]</span>         <span class=\"token operator\">=</span> path      <span class=\"token comment\"># /hello</span>\n        env<span class=\"token punctuation\">[</span><span class=\"token string\">'SERVER_NAME'</span><span class=\"token punctuation\">]</span>       <span class=\"token operator\">=</span> host      <span class=\"token comment\"># localhost</span>\n        env<span class=\"token punctuation\">[</span><span class=\"token string\">'SERVER_PORT'</span><span class=\"token punctuation\">]</span>       <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 9527</span>\n        <span class=\"token keyword\">return</span> env\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">start_response</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> status<span class=\"token punctuation\">,</span> resp_header<span class=\"token punctuation\">,</span> exc_info<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        header <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Server'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'WSGIServer 0.2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>headers_set <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>status<span class=\"token punctuation\">,</span> resp_header <span class=\"token operator\">+</span> header<span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">finish_response</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> conn<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">,</span> headers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        status<span class=\"token punctuation\">,</span> resp_header <span class=\"token operator\">=</span> headers\n\n        <span class=\"token comment\"># make header</span>\n        resp <span class=\"token operator\">=</span> <span class=\"token string\">'HTTP/1.1 {0}\\r\\n'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> header <span class=\"token keyword\">in</span> resp_header<span class=\"token punctuation\">:</span>\n            resp <span class=\"token operator\">+=</span> <span class=\"token string\">'{0}: {1}\\r\\n'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>header<span class=\"token punctuation\">)</span>\n        resp <span class=\"token operator\">+=</span> <span class=\"token string\">'\\r\\n'</span>\n\n        <span class=\"token comment\"># make body</span>\n        resp <span class=\"token operator\">+=</span> <span class=\"token string\">'{0}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">await</span> loop<span class=\"token punctuation\">.</span>sock_sendall<span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n            conn<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">run_server</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n            conn<span class=\"token punctuation\">,</span> addr <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> loop<span class=\"token punctuation\">.</span>sock_accept<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>_sock<span class=\"token punctuation\">)</span>\n            loop<span class=\"token punctuation\">.</span>create_task<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>handle_request<span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">handle_request</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> conn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># get request data</span>\n        req <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> loop<span class=\"token punctuation\">.</span>sock_recv<span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">,</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> req<span class=\"token punctuation\">:</span>\n            method<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">,</span> ver <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>parse_request<span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">)</span>\n            <span class=\"token comment\"># get environment</span>\n            env <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>get_environ<span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> method<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span>\n            <span class=\"token comment\"># get application execute result</span>\n            res <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_app<span class=\"token punctuation\">(</span>env<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>start_response<span class=\"token punctuation\">)</span>\n            res <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>_<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n            res <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span>\n            loop<span class=\"token punctuation\">.</span>create_task<span class=\"token punctuation\">(</span>\n                 self<span class=\"token punctuation\">.</span>finish_response<span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>headers_set<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\napp <span class=\"token operator\">=</span> Flask<span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span>\n\n@app<span class=\"token punctuation\">.</span>route<span class=\"token punctuation\">(</span><span class=\"token string\">'/hello'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello WSGI\"</span><span class=\"token punctuation\">,</span>mimetype<span class=\"token operator\">=</span><span class=\"token string\">\"text/plain\"</span><span class=\"token punctuation\">)</span>\n\nserver <span class=\"token operator\">=</span> WSGIServer<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> app<span class=\"token punctuation\">.</span>wsgi_app<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    loop<span class=\"token punctuation\">.</span>run_until_complete<span class=\"token punctuation\">(</span>server<span class=\"token punctuation\">.</span>run_server<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">pass</span>\n<span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n    loop<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Then open browser with url: localhost:9527/hello</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p><a href=\"https://www.pythonsheets.com/\">Acesse a ReferÃªncia original 1:</a>\n<a href=\"https://www.pythoncheatsheet.org/\">Acesse a ReferÃªncia original 2:</a></p>","frontmatter":{"title":"Python tudo sobre Asyncio","date":"January 05, 2020","description":""}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/python-asyncio/","previous":{"fields":{"slug":"/python-basic/"},"frontmatter":{"title":"Python para iniciantes"}},"next":{"fields":{"slug":"/python-sqlalchemy/"},"frontmatter":{"title":"Python tudo sobre SQLAlchemy"}}}}}