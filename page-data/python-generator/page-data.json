{"componentChunkName":"component---src-templates-blog-post-js","path":"/python-generator/","result":{"data":{"site":{"siteMetadata":{"title":"Python para impacientes"}},"markdownRemark":{"id":"00526437-3a1e-56eb-8645-bd49fbaf5864","excerpt":"Glossary of Generator Produce value via generator Unpacking Generators Implement Iterable object via generator Send message to generator  expression yield (fromâ€¦","html":"<h1></h1>\n<h2>Glossary of Generator</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># generator function</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">gen_func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">yield</span> <span class=\"token number\">5566</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> gen_func\n<span class=\"token operator\">&lt;</span>function gen_func at <span class=\"token number\">0x1019273a</span><span class=\"token operator\">></span>\n\n<span class=\"token comment\"># generator</span>\n<span class=\"token comment\">#</span>\n<span class=\"token comment\"># calling the generator function returns a generator</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> g <span class=\"token operator\">=</span> gen_func<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> g\n<span class=\"token operator\">&lt;</span>generator <span class=\"token builtin\">object</span> gen_func at <span class=\"token number\">0x101238fd</span><span class=\"token operator\">></span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span>\n<span class=\"token number\">5566</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span>\nTraceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\nStopIteration\n\n<span class=\"token comment\"># generator expression</span>\n<span class=\"token comment\">#</span>\n<span class=\"token comment\"># generator expression evaluating directly to a generator</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> g <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> g\n<span class=\"token operator\">&lt;</span>generator <span class=\"token builtin\">object</span> <span class=\"token operator\">&lt;</span>genexpr<span class=\"token operator\">></span> at <span class=\"token number\">0x10a9c191</span><span class=\"token operator\">></span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span>\n<span class=\"token number\">0</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span>\n<span class=\"token number\">1</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span>\nTraceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\nStopIteration</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Produce value via generator</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">from</span> __future__ <span class=\"token keyword\">import</span> print_function\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">prime</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     p <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">while</span> n <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             <span class=\"token keyword\">if</span> p <span class=\"token operator\">%</span> x <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>                 <span class=\"token keyword\">break</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             <span class=\"token keyword\">yield</span> p\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             n <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         p <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> p <span class=\"token operator\">=</span> prime<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span>\n<span class=\"token number\">2</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span>\n<span class=\"token number\">3</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span>\n<span class=\"token number\">5</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span>\nTraceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\nStopIteration\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> prime<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token number\">2</span> <span class=\"token number\">3</span> <span class=\"token number\">5</span> <span class=\"token number\">7</span> <span class=\"token number\">11</span> <span class=\"token operator\">>></span><span class=\"token operator\">></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Unpacking Generators</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># PEP 448</span>\n\n<span class=\"token comment\"># unpacking inside a list</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> g1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> g2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x<span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>g1<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>g2<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token comment\"># equal to</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> g1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> g2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x<span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>g1<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>g2<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># unpacking inside a set</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> g <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><span class=\"token operator\">*</span>g<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># unpacking to variables</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> g <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c <span class=\"token operator\">=</span> g\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span>\n<span class=\"token number\">0</span> <span class=\"token number\">1</span> <span class=\"token number\">2</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> g <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>c<span class=\"token punctuation\">,</span> d <span class=\"token operator\">=</span> g\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">)</span>\n<span class=\"token number\">0</span> <span class=\"token number\">1</span> <span class=\"token number\">5</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># unpacking inside a function</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>x <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">0</span> <span class=\"token number\">1</span> <span class=\"token number\">2</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Implement Iterable object via generator</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">from</span> __future__ <span class=\"token keyword\">import</span> print_function\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Count</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         self<span class=\"token punctuation\">.</span>_n <span class=\"token operator\">=</span> n\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">def</span> <span class=\"token function\">__iter__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         n <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_n\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">while</span> n <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             <span class=\"token keyword\">yield</span> n\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             n <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">def</span> <span class=\"token function\">__reversed__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         n <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">while</span> n <span class=\"token operator\">&lt;=</span> self<span class=\"token punctuation\">.</span>_n<span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             <span class=\"token keyword\">yield</span> n\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             n <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> Count<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token number\">5</span> <span class=\"token number\">4</span> <span class=\"token number\">3</span> <span class=\"token number\">2</span> <span class=\"token number\">1</span> <span class=\"token operator\">>></span><span class=\"token operator\">></span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">reversed</span><span class=\"token punctuation\">(</span>Count<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token number\">1</span> <span class=\"token number\">2</span> <span class=\"token number\">3</span> <span class=\"token number\">4</span> <span class=\"token number\">5</span> <span class=\"token operator\">>></span><span class=\"token operator\">></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Send message to generator</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">spam</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     msg <span class=\"token operator\">=</span> <span class=\"token keyword\">yield</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Message:\"</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     g <span class=\"token operator\">=</span> spam<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token comment\"># start generator</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token comment\"># send message to generator</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     g<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token keyword\">except</span> StopIteration<span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">pass</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\nMessage<span class=\"token punctuation\">:</span> Hello World!</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2><code class=\"language-text\">yield from</code> expression</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># delegating gen do nothing(pipe)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">subgen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">yield</span> <span class=\"token number\">9527</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">except</span> ValueError<span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"get value error\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">delegating_gen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">yield</span> <span class=\"token keyword\">from</span> subgen<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> g <span class=\"token operator\">=</span> delegating_gen<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     g<span class=\"token punctuation\">.</span>throw<span class=\"token punctuation\">(</span>ValueError<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token keyword\">except</span> StopIteration<span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gen stop\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token number\">9527</span>\nget value error\ngen stop\n\n<span class=\"token comment\"># yield from + yield from</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> inspect\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">subgen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">yield</span> <span class=\"token keyword\">from</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">delegating_gen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">yield</span> <span class=\"token keyword\">from</span> subgen<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> g <span class=\"token operator\">=</span> delegating_gen<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> inspect<span class=\"token punctuation\">.</span>getgeneratorstate<span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span>\n<span class=\"token string\">'GEN_CREATED'</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span>\n<span class=\"token number\">0</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> inspect<span class=\"token punctuation\">.</span>getgeneratorstate<span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span>\n<span class=\"token string\">'GEN_SUSPENDED'</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> g<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> inspect<span class=\"token punctuation\">.</span>getgeneratorstate<span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span>\n<span class=\"token string\">'GEN_CLOSED'</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>yield (from) EXPR return RES</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">average</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     total <span class=\"token operator\">=</span> <span class=\"token number\">.0</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     count <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     avg <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         val <span class=\"token operator\">=</span> <span class=\"token keyword\">yield</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> val<span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             <span class=\"token keyword\">break</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         total <span class=\"token operator\">+=</span> val\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         count <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         avg <span class=\"token operator\">=</span> total <span class=\"token operator\">/</span> count\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">return</span> avg\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> g <span class=\"token operator\">=</span> average<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span> <span class=\"token comment\"># start gen</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> g<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> g<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     g<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token keyword\">except</span> StopIteration <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     ret <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>value\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> ret\n<span class=\"token number\">4.0</span>\n\n<span class=\"token comment\"># yield from EXP return RES</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">subgen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">yield</span> <span class=\"token number\">9527</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">delegating_gen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">yield</span> <span class=\"token keyword\">from</span> subgen<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">return</span> <span class=\"token number\">5566</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     g <span class=\"token operator\">=</span> delegating_gen<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token keyword\">except</span> StopIteration <span class=\"token keyword\">as</span> _e<span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>_e<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token number\">9527</span>\n<span class=\"token number\">5566</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Generate sequences</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># get a list via generator</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">chain</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token string\">'ab'</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">yield</span> x\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">yield</span> x\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> a <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>chain<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> a\n<span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># equivalent to</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">chain</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">yield</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ab'</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">yield</span> <span class=\"token keyword\">from</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> a <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>chain<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> a\n<span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>What <code class=\"language-text\">RES = yield from EXP</code> actually do?</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># ref: pep380</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">subgen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">yield</span> x\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> EXP <span class=\"token operator\">=</span> subgen<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">delegating_gen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     _i <span class=\"token operator\">=</span> <span class=\"token builtin\">iter</span><span class=\"token punctuation\">(</span>EXP<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         _y <span class=\"token operator\">=</span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>_i<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">except</span> StopIteration <span class=\"token keyword\">as</span> _e<span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         RES <span class=\"token operator\">=</span> _e<span class=\"token punctuation\">.</span>value\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             _s <span class=\"token operator\">=</span> <span class=\"token keyword\">yield</span> _y\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>                 _y <span class=\"token operator\">=</span> _i<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>_s<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             <span class=\"token keyword\">except</span> StopIteration <span class=\"token keyword\">as</span> _e<span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>                 RES <span class=\"token operator\">=</span> _e<span class=\"token punctuation\">.</span>value\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>                 <span class=\"token keyword\">break</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> g <span class=\"token operator\">=</span> delegating_gen<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span>\n<span class=\"token number\">0</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span>\n<span class=\"token number\">1</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span>\n<span class=\"token number\">2</span>\n\n<span class=\"token comment\"># equivalent to</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> EXP <span class=\"token operator\">=</span> subgen<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">delegating_gen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     RES <span class=\"token operator\">=</span> <span class=\"token keyword\">yield</span> <span class=\"token keyword\">from</span> EXP\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> g <span class=\"token operator\">=</span> delegating_gen<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span>\n<span class=\"token number\">0</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span>\n<span class=\"token number\">1</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2><code class=\"language-text\">for _ in gen()</code> simulate <code class=\"language-text\">yield from</code></h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">subgen</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">yield</span> x\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">gen</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">yield</span> <span class=\"token keyword\">from</span> subgen<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> g <span class=\"token operator\">=</span> gen<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span>\n<span class=\"token number\">0</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span>\n<span class=\"token number\">1</span>\n\n<span class=\"token comment\"># equal to</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">gen</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> subgen<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">yield</span> x\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> g <span class=\"token operator\">=</span> gen<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span>\n<span class=\"token number\">0</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span>\n<span class=\"token number\">1</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Check generator type</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">from</span> types <span class=\"token keyword\">import</span> GeneratorType\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">gen_func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">yield</span> <span class=\"token number\">5566</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> g <span class=\"token operator\">=</span> gen_func<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">isinstance</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">,</span> GeneratorType<span class=\"token punctuation\">)</span>\n<span class=\"token boolean\">True</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">isinstance</span><span class=\"token punctuation\">(</span><span class=\"token number\">123</span><span class=\"token punctuation\">,</span> GeneratorType<span class=\"token punctuation\">)</span>\n<span class=\"token boolean\">False</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Check Generator State</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> inspect\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">gen_func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">yield</span> <span class=\"token number\">9527</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> g <span class=\"token operator\">=</span> gen_func<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> inspect<span class=\"token punctuation\">.</span>getgeneratorstate<span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span>\n<span class=\"token string\">'GEN_CREATED'</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span>\n<span class=\"token number\">9527</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> inspect<span class=\"token punctuation\">.</span>getgeneratorstate<span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span>\n<span class=\"token string\">'GEN_SUSPENDED'</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> g<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> inspect<span class=\"token punctuation\">.</span>getgeneratorstate<span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span>\n<span class=\"token string\">'GEN_CLOSED'</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Simple compiler</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># David Beazley - Generators: The Final Frontier</span>\n\n<span class=\"token keyword\">import</span> re\n<span class=\"token keyword\">import</span> types\n<span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> namedtuple\n\ntokens <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">r'(?P&lt;NUMBER>\\d+)'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">r'(?P&lt;PLUS>\\+)'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">r'(?P&lt;MINUS>-)'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">r'(?P&lt;TIMES>\\*)'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">r'(?P&lt;DIVIDE>/)'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">r'(?P&lt;WS>\\s+)'</span><span class=\"token punctuation\">]</span>\n\nToken <span class=\"token operator\">=</span> namedtuple<span class=\"token punctuation\">(</span><span class=\"token string\">'Token'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'type'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'value'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nlex <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">'|'</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>tokens<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">tokenize</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    scan <span class=\"token operator\">=</span> lex<span class=\"token punctuation\">.</span>scanner<span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span>\n    gen <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>Token<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">.</span>lastgroup<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">for</span> m <span class=\"token keyword\">in</span> <span class=\"token builtin\">iter</span><span class=\"token punctuation\">(</span>scan<span class=\"token punctuation\">.</span>match<span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> m<span class=\"token punctuation\">.</span>lastgroup <span class=\"token operator\">!=</span> <span class=\"token string\">'WS'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> gen\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Node</span><span class=\"token punctuation\">:</span>\n    _fields <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> attr<span class=\"token punctuation\">,</span> value <span class=\"token keyword\">in</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>_fields<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token builtin\">setattr</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> attr<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Number</span><span class=\"token punctuation\">(</span>Node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    _fields <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'value'</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">BinOp</span><span class=\"token punctuation\">(</span>Node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    _fields <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'op'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'left'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'right'</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>toks<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    lookahead<span class=\"token punctuation\">,</span> current <span class=\"token operator\">=</span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>toks<span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">accept</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>toktypes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">nonlocal</span> lookahead<span class=\"token punctuation\">,</span> current\n        <span class=\"token keyword\">if</span> lookahead <span class=\"token keyword\">and</span> lookahead<span class=\"token punctuation\">.</span><span class=\"token builtin\">type</span> <span class=\"token keyword\">in</span> toktypes<span class=\"token punctuation\">:</span>\n            current<span class=\"token punctuation\">,</span> lookahead <span class=\"token operator\">=</span> lookahead<span class=\"token punctuation\">,</span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>toks<span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">expr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        left <span class=\"token operator\">=</span> term<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">while</span> accept<span class=\"token punctuation\">(</span><span class=\"token string\">'PLUS'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'MINUS'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            left <span class=\"token operator\">=</span> BinOp<span class=\"token punctuation\">(</span>current<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span> left<span class=\"token punctuation\">)</span>\n            left<span class=\"token punctuation\">.</span>right <span class=\"token operator\">=</span> term<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> left\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">term</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        left <span class=\"token operator\">=</span> factor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">while</span> accept<span class=\"token punctuation\">(</span><span class=\"token string\">'TIMES'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'DIVIDE'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            left <span class=\"token operator\">=</span> BinOp<span class=\"token punctuation\">(</span>current<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span> left<span class=\"token punctuation\">)</span>\n            left<span class=\"token punctuation\">.</span>right <span class=\"token operator\">=</span> factor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> left\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">factor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> accept<span class=\"token punctuation\">(</span><span class=\"token string\">'NUMBER'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> Number<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>current<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">raise</span> SyntaxError<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> expr<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">NodeVisitor</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">visit</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        stack <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>self<span class=\"token punctuation\">.</span>genvisit<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n        ret <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n        <span class=\"token keyword\">while</span> stack<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n                node <span class=\"token operator\">=</span> stack<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span>\n                stack<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>genvisit<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                ret <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n            <span class=\"token keyword\">except</span> StopIteration <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n                stack<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                ret <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>value\n        <span class=\"token keyword\">return</span> ret\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">genvisit</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        ret <span class=\"token operator\">=</span> <span class=\"token builtin\">getattr</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token string\">'visit_'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__name__<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">isinstance</span><span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">,</span> types<span class=\"token punctuation\">.</span>GeneratorType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            ret <span class=\"token operator\">=</span> <span class=\"token keyword\">yield</span> <span class=\"token keyword\">from</span> ret\n        <span class=\"token keyword\">return</span> ret\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Evaluator</span><span class=\"token punctuation\">(</span>NodeVisitor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">visit_Number</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> node<span class=\"token punctuation\">.</span>value\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">visit_BinOp</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        leftval <span class=\"token operator\">=</span> <span class=\"token keyword\">yield</span> node<span class=\"token punctuation\">.</span>left\n        rightval <span class=\"token operator\">=</span> <span class=\"token keyword\">yield</span> node<span class=\"token punctuation\">.</span>right\n        <span class=\"token keyword\">if</span> node<span class=\"token punctuation\">.</span>op <span class=\"token operator\">==</span> <span class=\"token string\">'+'</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> leftval <span class=\"token operator\">+</span> rightval\n        <span class=\"token keyword\">elif</span> node<span class=\"token punctuation\">.</span>op <span class=\"token operator\">==</span> <span class=\"token string\">'-'</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> leftval <span class=\"token operator\">-</span> rightval\n        <span class=\"token keyword\">elif</span> node<span class=\"token punctuation\">.</span>op <span class=\"token operator\">==</span> <span class=\"token string\">'*'</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> leftval <span class=\"token operator\">*</span> rightval\n        <span class=\"token keyword\">elif</span> node<span class=\"token punctuation\">.</span>op <span class=\"token operator\">==</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> leftval <span class=\"token operator\">/</span> rightval\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">evaluate</span><span class=\"token punctuation\">(</span>exp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    toks <span class=\"token operator\">=</span> tokenize<span class=\"token punctuation\">(</span>exp<span class=\"token punctuation\">)</span>\n    tree <span class=\"token operator\">=</span> parse<span class=\"token punctuation\">(</span>toks<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> Evaluator<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>visit<span class=\"token punctuation\">(</span>tree<span class=\"token punctuation\">)</span>\n\n\nexp <span class=\"token operator\">=</span> <span class=\"token string\">'2 * 3 + 5 / 2'</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>evaluate<span class=\"token punctuation\">(</span>exp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nexp <span class=\"token operator\">=</span> <span class=\"token string\">'+'</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>evaluate<span class=\"token punctuation\">(</span>exp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>output:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">python3 compiler.py\n<span class=\"token number\">8.5</span>\n<span class=\"token number\">49995000</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<h2>Context manager and generator</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> contextlib\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> @contextlib<span class=\"token punctuation\">.</span>contextmanager\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token keyword\">def</span> <span class=\"token function\">mylist</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         l <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">yield</span> l\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"exit scope\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">with</span> mylist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> l<span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\nexit scope</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>What <code class=\"language-text\">@contextmanager</code> actually doing?</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># ref: PyCon 2014 - David Beazley</span>\n<span class=\"token comment\"># define a context manager class</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">GeneratorCM</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> gen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>_gen <span class=\"token operator\">=</span> gen\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__enter__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>_gen<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__exit__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>exc_info<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> exc_info<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n                <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>_gen<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                self<span class=\"token punctuation\">.</span>_gen<span class=\"token punctuation\">.</span>throw<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>exc_info<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">raise</span> RuntimeError\n        <span class=\"token keyword\">except</span> StopIteration<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n        <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">raise</span>\n\n<span class=\"token comment\"># define a decorator</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">contextmanager</span><span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> GeneratorCM<span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> run\n\n<span class=\"token comment\"># example of context manager</span>\n<span class=\"token decorator annotation punctuation\">@contextmanager</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">mylist</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        l <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">yield</span> l\n    <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"exit scope\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">with</span> mylist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> l<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>output:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">$ python ctx.py\n[1, 2, 3, 4, 5]\nexit scope</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<h2>profile code block</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> time\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> @contextmanager\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token keyword\">def</span> <span class=\"token function\">profile</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         s <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">yield</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         e <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'{} cost time: {}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span> e <span class=\"token operator\">-</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">with</span> profile<span class=\"token punctuation\">(</span><span class=\"token string\">'block1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\nblock1 cost time<span class=\"token punctuation\">:</span> <span class=\"token number\">1.00105595589</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">with</span> profile<span class=\"token punctuation\">(</span><span class=\"token string\">'block2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\nblock2 cost time<span class=\"token punctuation\">:</span> <span class=\"token number\">3.00104284286</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2><code class=\"language-text\">yield from</code> and <code class=\"language-text\">__iter__</code></h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FakeGen</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">def</span> <span class=\"token function\">__iter__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         n <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             <span class=\"token keyword\">yield</span> n\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             n <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">def</span> <span class=\"token function\">__reversed__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         n <span class=\"token operator\">=</span> <span class=\"token number\">9527</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>            <span class=\"token keyword\">yield</span> n\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>            n <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">spam</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">yield</span> <span class=\"token keyword\">from</span> FakeGen<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> s <span class=\"token operator\">=</span> spam<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n<span class=\"token number\">0</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n<span class=\"token number\">1</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n<span class=\"token number\">2</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n<span class=\"token number\">3</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">reversed_spam</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">yield</span> <span class=\"token keyword\">from</span> <span class=\"token builtin\">reversed</span><span class=\"token punctuation\">(</span>FakeGen<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> g <span class=\"token operator\">=</span> reversed_spam<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span>\n<span class=\"token number\">9527</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span>\n<span class=\"token number\">9526</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span>\n<span class=\"token number\">9525</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2><code class=\"language-text\">yield from == await</code> expression</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># \"await\" include in pyhton3.5</span>\n<span class=\"token keyword\">import</span> asyncio\n<span class=\"token keyword\">import</span> socket\n\n<span class=\"token comment\"># set socket and event loop</span>\nloop <span class=\"token operator\">=</span> asyncio<span class=\"token punctuation\">.</span>get_event_loop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nhost <span class=\"token operator\">=</span> <span class=\"token string\">'localhost'</span>\nport <span class=\"token operator\">=</span> <span class=\"token number\">5566</span>\nsock <span class=\"token operator\">=</span> socket<span class=\"token punctuation\">.</span>socket<span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">.</span>AF_INET<span class=\"token punctuation\">,</span> socket<span class=\"token punctuation\">.</span>SOCK_STREAM<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nsock<span class=\"token punctuation\">.</span>setsockopt<span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">.</span>SOL_SOCKET<span class=\"token punctuation\">,</span> socket<span class=\"token punctuation\">.</span>SO_REUSEADDR<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\nsock<span class=\"token punctuation\">.</span>setblocking<span class=\"token punctuation\">(</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\nsock<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsock<span class=\"token punctuation\">.</span>listen<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n\n@asyncio<span class=\"token punctuation\">.</span>coroutine\n<span class=\"token keyword\">def</span> <span class=\"token function\">echo_server</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        conn<span class=\"token punctuation\">,</span> addr <span class=\"token operator\">=</span> <span class=\"token keyword\">yield</span> <span class=\"token keyword\">from</span> loop<span class=\"token punctuation\">.</span>sock_accept<span class=\"token punctuation\">(</span>sock<span class=\"token punctuation\">)</span>\n        loop<span class=\"token punctuation\">.</span>create_task<span class=\"token punctuation\">(</span>handler<span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n@asyncio<span class=\"token punctuation\">.</span>coroutine\n<span class=\"token keyword\">def</span> <span class=\"token function\">handler</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        msg <span class=\"token operator\">=</span> <span class=\"token keyword\">yield</span> <span class=\"token keyword\">from</span> loop<span class=\"token punctuation\">.</span>sock_recv<span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">,</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> msg<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n        <span class=\"token keyword\">yield</span> <span class=\"token keyword\">from</span> loop<span class=\"token punctuation\">.</span>sock_sendall<span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">)</span>\n    conn<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># equal to</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">echo_server</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        conn<span class=\"token punctuation\">,</span> addr <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> loop<span class=\"token punctuation\">.</span>sock_accept<span class=\"token punctuation\">(</span>sock<span class=\"token punctuation\">)</span>\n        loop<span class=\"token punctuation\">.</span>create_task<span class=\"token punctuation\">(</span>handler<span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">handler</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        msg <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> loop<span class=\"token punctuation\">.</span>sock_recv<span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">,</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> msg<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n        <span class=\"token keyword\">await</span> loop<span class=\"token punctuation\">.</span>sock_sendall<span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">)</span>\n    conn<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nloop<span class=\"token punctuation\">.</span>create_task<span class=\"token punctuation\">(</span>echo_server<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nloop<span class=\"token punctuation\">.</span>run_forever<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>output: (bash 1)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">$ nc localhost 5566\nHello\nHello</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>output: (bash 2)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">$ nc localhost 5566\nWorld\nWorld</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<h2>Closure in Python - using generator</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># nonlocal version</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">closure</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     x <span class=\"token operator\">=</span> <span class=\"token number\">5566</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">def</span> <span class=\"token function\">inner_func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">nonlocal</span> x\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         x <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">return</span> x\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">return</span> inner_func\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> c <span class=\"token operator\">=</span> closure<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> c<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">5567</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> c<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">5568</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> c<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">5569</span>\n\n<span class=\"token comment\"># class version</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Closure</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         self<span class=\"token punctuation\">.</span>_x <span class=\"token operator\">=</span> <span class=\"token number\">5566</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">def</span> <span class=\"token function\">__call__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         self<span class=\"token punctuation\">.</span>_x <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>_x\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> c <span class=\"token operator\">=</span> Closure<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> c<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">5567</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> c<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">5568</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> c<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">5569</span>\n\n<span class=\"token comment\"># generator version (best)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">closure_gen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     x <span class=\"token operator\">=</span> <span class=\"token number\">5566</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         x <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">yield</span> x\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> g <span class=\"token operator\">=</span> closure_gen<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span>\n<span class=\"token number\">5567</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span>\n<span class=\"token number\">5568</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span>\n<span class=\"token number\">5569</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Implement a simple scheduler</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># idea: write an event loop(scheduler)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">fib</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">if</span> n <span class=\"token operator\">&lt;=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">return</span> <span class=\"token number\">1</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">return</span> fib<span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> fib<span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">g_fib</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> n <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">yield</span> fib<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> deque\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> t <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>g_fib<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> g_fib<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> q <span class=\"token operator\">=</span> deque<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> q<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">while</span> q<span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             t <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span>popleft<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             q<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">except</span> StopIteration<span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Task done\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> run<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">1</span>\n<span class=\"token number\">1</span>\n<span class=\"token number\">1</span>\n<span class=\"token number\">1</span>\n<span class=\"token number\">2</span>\n<span class=\"token number\">2</span>\nTask done\n<span class=\"token number\">3</span>\n<span class=\"token number\">5</span>\nTask done</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Simple round-robin with blocking</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># ref: PyCon 2015 - David Beazley</span>\n<span class=\"token comment\"># skill: using task and wait queue</span>\n\n<span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> deque\n<span class=\"token keyword\">from</span> select <span class=\"token keyword\">import</span> select\n<span class=\"token keyword\">import</span> socket\n\ntasks <span class=\"token operator\">=</span> deque<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nw_read <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\nw_send <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">while</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>tasks<span class=\"token punctuation\">,</span> w_read<span class=\"token punctuation\">,</span> w_send<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">while</span> <span class=\"token keyword\">not</span> tasks<span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># polling tasks</span>\n            can_r<span class=\"token punctuation\">,</span> can_s<span class=\"token punctuation\">,</span>_ <span class=\"token operator\">=</span> select<span class=\"token punctuation\">(</span>w_read<span class=\"token punctuation\">,</span> w_send<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">for</span> _r <span class=\"token keyword\">in</span> can_r<span class=\"token punctuation\">:</span>\n                tasks<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>w_read<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span>_r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">for</span> _w <span class=\"token keyword\">in</span> can_s<span class=\"token punctuation\">:</span>\n                tasks<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>w_send<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span>_w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n            task <span class=\"token operator\">=</span> tasks<span class=\"token punctuation\">.</span>popleft<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            why<span class=\"token punctuation\">,</span>what <span class=\"token operator\">=</span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>task<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> why <span class=\"token operator\">==</span> <span class=\"token string\">'recv'</span><span class=\"token punctuation\">:</span>\n                w_read<span class=\"token punctuation\">[</span>what<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> task\n            <span class=\"token keyword\">elif</span> why <span class=\"token operator\">==</span> <span class=\"token string\">'send'</span><span class=\"token punctuation\">:</span>\n                w_send<span class=\"token punctuation\">[</span>what<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> task\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">raise</span> RuntimeError\n        <span class=\"token keyword\">except</span> StopIteration<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">pass</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">server</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    host <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5566</span><span class=\"token punctuation\">)</span>\n    sock <span class=\"token operator\">=</span> socket<span class=\"token punctuation\">.</span>socket<span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">.</span>AF_INET<span class=\"token punctuation\">,</span> socket<span class=\"token punctuation\">.</span>SOCK_STREAM<span class=\"token punctuation\">)</span>\n    sock<span class=\"token punctuation\">.</span>setsockopt<span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">.</span>SOL_SOCKET<span class=\"token punctuation\">,</span> socket<span class=\"token punctuation\">.</span>SO_REUSEADDR<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    sock<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">)</span>\n    sock<span class=\"token punctuation\">.</span>listen<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># tell scheduler want block</span>\n        <span class=\"token keyword\">yield</span> <span class=\"token string\">'recv'</span><span class=\"token punctuation\">,</span> sock\n        conn<span class=\"token punctuation\">,</span>addr <span class=\"token operator\">=</span> sock<span class=\"token punctuation\">.</span>accept<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        tasks<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>client_handler<span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">client_handler</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># tell scheduler want block</span>\n        <span class=\"token keyword\">yield</span> <span class=\"token string\">'recv'</span><span class=\"token punctuation\">,</span> conn\n        msg <span class=\"token operator\">=</span> conn<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> msg<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n        <span class=\"token comment\"># tell scheduler want block</span>\n        <span class=\"token keyword\">yield</span> <span class=\"token string\">'send'</span><span class=\"token punctuation\">,</span> conn\n        conn<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span>\n    conn<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ntasks<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>server<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nrun<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>simple round-robin with blocking and non-blocking</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># this method will cause blocking hunger</span>\n<span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> deque\n<span class=\"token keyword\">from</span> select <span class=\"token keyword\">import</span> select\n<span class=\"token keyword\">import</span> socket\n\ntasks <span class=\"token operator\">=</span> deque<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nw_read <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\nw_send <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">while</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>tasks<span class=\"token punctuation\">,</span> w_read<span class=\"token punctuation\">,</span> w_send<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">while</span> <span class=\"token keyword\">not</span> tasks<span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># polling tasks</span>\n            can_r<span class=\"token punctuation\">,</span>can_s<span class=\"token punctuation\">,</span>_ <span class=\"token operator\">=</span> select<span class=\"token punctuation\">(</span>w_read<span class=\"token punctuation\">,</span> w_send<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">for</span> _r <span class=\"token keyword\">in</span> can_r<span class=\"token punctuation\">:</span>\n                tasks<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>w_read<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span>_r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">for</span> _w <span class=\"token keyword\">in</span> can_s<span class=\"token punctuation\">:</span>\n                tasks<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>w_send<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span>_w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n            task <span class=\"token operator\">=</span> tasks<span class=\"token punctuation\">.</span>popleft<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            why<span class=\"token punctuation\">,</span>what <span class=\"token operator\">=</span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>task<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> why <span class=\"token operator\">==</span> <span class=\"token string\">'recv'</span><span class=\"token punctuation\">:</span>\n                w_read<span class=\"token punctuation\">[</span>what<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> task\n            <span class=\"token keyword\">elif</span> why <span class=\"token operator\">==</span> <span class=\"token string\">'send'</span><span class=\"token punctuation\">:</span>\n                w_send<span class=\"token punctuation\">[</span>what<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> task\n            <span class=\"token keyword\">elif</span> why <span class=\"token operator\">==</span> <span class=\"token string\">'continue'</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>what<span class=\"token punctuation\">)</span>\n                tasks<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>task<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">raise</span> RuntimeError\n        <span class=\"token keyword\">except</span> StopIteration<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">pass</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">fib</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> n <span class=\"token operator\">&lt;=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">return</span> fib<span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> fib<span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">g_fib</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> n <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">yield</span> <span class=\"token string\">'continue'</span><span class=\"token punctuation\">,</span> fib<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n\ntasks<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>g_fib<span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">server</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    host <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5566</span><span class=\"token punctuation\">)</span>\n    sock <span class=\"token operator\">=</span> socket<span class=\"token punctuation\">.</span>socket<span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">.</span>AF_INET<span class=\"token punctuation\">,</span> socket<span class=\"token punctuation\">.</span>SOCK_STREAM<span class=\"token punctuation\">)</span>\n    sock<span class=\"token punctuation\">.</span>setsockopt<span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">.</span>SOL_SOCKET<span class=\"token punctuation\">,</span> socket<span class=\"token punctuation\">.</span>SO_REUSEADDR<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    sock<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">)</span>\n    sock<span class=\"token punctuation\">.</span>listen<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">yield</span> <span class=\"token string\">'recv'</span><span class=\"token punctuation\">,</span> sock\n        conn<span class=\"token punctuation\">,</span>addr <span class=\"token operator\">=</span> sock<span class=\"token punctuation\">.</span>accept<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        tasks<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>client_handler<span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">client_handler</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">yield</span> <span class=\"token string\">'recv'</span><span class=\"token punctuation\">,</span> conn\n        msg <span class=\"token operator\">=</span> conn<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> msg<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n        <span class=\"token keyword\">yield</span> <span class=\"token string\">'send'</span><span class=\"token punctuation\">,</span> conn\n        conn<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span>\n    conn<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ntasks<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>server<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nrun<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Asynchronous Generators</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># PEP 525</span>\n<span class=\"token comment\">#</span>\n<span class=\"token comment\"># Need python-3.6 or above</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> asyncio\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">slow_gen</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">await</span> asyncio<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">yield</span> x\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">task</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">async</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> slow_gen<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> loop <span class=\"token operator\">=</span> asyncio<span class=\"token punctuation\">.</span>get_event_loop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> loop<span class=\"token punctuation\">.</span>run_until_complete<span class=\"token punctuation\">(</span>task<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">0</span>\n<span class=\"token number\">1</span>\n<span class=\"token number\">2</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Asynchronous generators can have <code class=\"language-text\">try..finally</code> blocks</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># Need python-3.6 or above</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> asyncio\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">agen</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">await</span> asyncio<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">yield</span> <span class=\"token number\">1</span> <span class=\"token operator\">/</span> <span class=\"token number\">0</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"finally part\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>t<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         g <span class=\"token operator\">=</span> agen<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">await</span> g<span class=\"token punctuation\">.</span>__anext__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">repr</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> loop <span class=\"token operator\">=</span> asyncio<span class=\"token punctuation\">.</span>get_event_loop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> loop<span class=\"token punctuation\">.</span>run_until_complete<span class=\"token punctuation\">(</span>main<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">finally</span> part\nZeroDivisionError<span class=\"token punctuation\">(</span><span class=\"token string\">'division by zero'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>send value and throw exception into async generator</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># Need python-3.6 or above</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> asyncio\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">agen</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> t<span class=\"token operator\">=</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             <span class=\"token keyword\">await</span> asyncio<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             val <span class=\"token operator\">=</span> <span class=\"token keyword\">yield</span> x\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'get val: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>val<span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">except</span> RuntimeError <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">await</span> asyncio<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">yield</span> <span class=\"token builtin\">repr</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     g <span class=\"token operator\">=</span> agen<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     ret <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> g<span class=\"token punctuation\">.</span>asend<span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">await</span> g<span class=\"token punctuation\">.</span>asend<span class=\"token punctuation\">(</span><span class=\"token string\">'foo'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     ret <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> g<span class=\"token punctuation\">.</span>athrow<span class=\"token punctuation\">(</span>RuntimeError<span class=\"token punctuation\">(</span><span class=\"token string\">'Get RuntimeError'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> loop <span class=\"token operator\">=</span> asyncio<span class=\"token punctuation\">.</span>get_event_loop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> loop<span class=\"token punctuation\">.</span>run_until_complete<span class=\"token punctuation\">(</span>main<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nget val<span class=\"token punctuation\">:</span> foo\n<span class=\"token number\">1</span>\nRuntimeError<span class=\"token punctuation\">(</span><span class=\"token string\">'Get RuntimeError'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Simple async round-robin</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># Need python-3.6 or above</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> asyncio\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> deque\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">agen</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> t<span class=\"token operator\">=</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">await</span> asyncio<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">yield</span> x\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     q <span class=\"token operator\">=</span> deque<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>agen<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> agen<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">while</span> q<span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             g <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span>popleft<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             ret <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> g<span class=\"token punctuation\">.</span>__anext__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             q<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">except</span> StopAsyncIteration<span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             <span class=\"token keyword\">pass</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> loop<span class=\"token punctuation\">.</span>run_until_complete<span class=\"token punctuation\">(</span>main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">0</span>\n<span class=\"token number\">0</span>\n<span class=\"token number\">1</span>\n<span class=\"token number\">1</span>\n<span class=\"token number\">2</span>\n<span class=\"token number\">2</span>\n<span class=\"token number\">3</span>\n<span class=\"token number\">4</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Async generator get better performance than async iterator</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># Need python-3.6 or above</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> time\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> asyncio\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AsyncIter</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         self<span class=\"token punctuation\">.</span>_n <span class=\"token operator\">=</span> n\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">def</span> <span class=\"token function\">__aiter__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">return</span> self\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">__anext__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         ret <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_n\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>_n <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             <span class=\"token keyword\">raise</span> StopAsyncIteration\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         self<span class=\"token punctuation\">.</span>_n <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">return</span> ret\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">agen</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">yield</span> i\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">task_agen</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     s <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">async</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> agen<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">pass</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     cost <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> s\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"agen cost time: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>cost<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">task_aiter</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     s <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">async</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> AsyncIter<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">pass</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     cost <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> s\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"aiter cost time: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>cost<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> n <span class=\"token operator\">=</span> <span class=\"token number\">10</span> <span class=\"token operator\">**</span> <span class=\"token number\">7</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> loop <span class=\"token operator\">=</span> asyncio<span class=\"token punctuation\">.</span>get_event_loop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> loop<span class=\"token punctuation\">.</span>run_until_complete<span class=\"token punctuation\">(</span>task_agen<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nagen cost time<span class=\"token punctuation\">:</span> <span class=\"token number\">1.2698817253112793</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> loop<span class=\"token punctuation\">.</span>run_until_complete<span class=\"token punctuation\">(</span>task_aiter<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\naiter cost time<span class=\"token punctuation\">:</span> <span class=\"token number\">4.168368101119995</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Asynchronous Comprehensions</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># PEP 530</span>\n<span class=\"token comment\">#</span>\n<span class=\"token comment\"># Need python-3.6 or above</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> asyncio\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">agen</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">await</span> asyncio<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">yield</span> x\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     ret <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>x  <span class=\"token keyword\">async</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> agen<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>ret<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     ret <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>x <span class=\"token keyword\">async</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> agen<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> x <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>ret<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     ret <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>x <span class=\"token keyword\">if</span> x <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span> <span class=\"token keyword\">else</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> agen<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>ret<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     ret <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>x<span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">:</span> x <span class=\"token keyword\">async</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> agen<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> loop<span class=\"token punctuation\">.</span>run_until_complete<span class=\"token punctuation\">(</span>main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">0</span> <span class=\"token number\">1</span> <span class=\"token number\">2</span> <span class=\"token number\">3</span> <span class=\"token number\">4</span>\n<span class=\"token number\">0</span> <span class=\"token number\">1</span> <span class=\"token number\">2</span>\n<span class=\"token number\">0</span> <span class=\"token number\">1</span> <span class=\"token number\">2</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n<span class=\"token punctuation\">{</span><span class=\"token string\">'0'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'3'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'4'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># await in Comprehensions</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">await</span> asyncio<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">return</span> <span class=\"token string\">\"foo\"</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">bar</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">await</span> asyncio<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">return</span> <span class=\"token string\">\"bar\"</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">baz</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">await</span> asyncio<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">return</span> <span class=\"token string\">\"baz\"</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">gen</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>f<span class=\"token punctuation\">,</span> t<span class=\"token operator\">=</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> f<span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">await</span> asyncio<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">yield</span> x\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">await_simple_task</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     ret <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">await</span> f<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> f <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span>foo<span class=\"token punctuation\">,</span> bar<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     ret <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">await</span> f<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> f <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span>foo<span class=\"token punctuation\">,</span> bar<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     ret <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>f<span class=\"token punctuation\">.</span>__name__<span class=\"token punctuation\">:</span> <span class=\"token keyword\">await</span> f<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> f <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span>foo<span class=\"token punctuation\">,</span> bar<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">await_other_task</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     ret <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">await</span> f<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> f <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span>foo<span class=\"token punctuation\">,</span> bar<span class=\"token punctuation\">]</span> <span class=\"token keyword\">if</span> <span class=\"token keyword\">await</span> baz<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     ret <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">await</span> f<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> f <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span>foo<span class=\"token punctuation\">,</span> bar<span class=\"token punctuation\">]</span> <span class=\"token keyword\">if</span> <span class=\"token keyword\">await</span> baz<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     ret <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>f<span class=\"token punctuation\">.</span>__name__<span class=\"token punctuation\">:</span> <span class=\"token keyword\">await</span> f<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> f <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span>foo<span class=\"token punctuation\">,</span> bar<span class=\"token punctuation\">]</span> <span class=\"token keyword\">if</span> <span class=\"token keyword\">await</span> baz<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">def</span> <span class=\"token function\">await_aiter_task</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     ret <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">await</span> f<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">for</span> f <span class=\"token keyword\">in</span> gen<span class=\"token punctuation\">(</span>foo<span class=\"token punctuation\">,</span> bar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     ret <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">await</span> f<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">for</span> f <span class=\"token keyword\">in</span> gen<span class=\"token punctuation\">(</span>foo<span class=\"token punctuation\">,</span> bar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     ret <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>f<span class=\"token punctuation\">.</span>__name__<span class=\"token punctuation\">:</span> <span class=\"token keyword\">await</span> f<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">for</span> f <span class=\"token keyword\">in</span> gen<span class=\"token punctuation\">(</span>foo<span class=\"token punctuation\">,</span> bar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     ret <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">await</span> f<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">for</span> f <span class=\"token keyword\">in</span> gen<span class=\"token punctuation\">(</span>foo<span class=\"token punctuation\">,</span> bar<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token keyword\">await</span> baz<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     ret <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">await</span> f<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">for</span> f <span class=\"token keyword\">in</span> gen<span class=\"token punctuation\">(</span>foo<span class=\"token punctuation\">,</span> bar<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token keyword\">await</span> baz<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     ret <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>f<span class=\"token punctuation\">.</span>__name__<span class=\"token punctuation\">:</span> <span class=\"token keyword\">await</span> f<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">for</span> f <span class=\"token keyword\">in</span> gen<span class=\"token punctuation\">(</span>foo<span class=\"token punctuation\">,</span> bar<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token keyword\">await</span> baz<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> asyncio\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> asyncio<span class=\"token punctuation\">.</span>get_event_loop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> loop<span class=\"token punctuation\">.</span>run_until_complete<span class=\"token punctuation\">(</span>await_simple_task<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token string\">'foo'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">{</span><span class=\"token string\">'bar'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'foo'</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token string\">'foo'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'foo'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">}</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> loop<span class=\"token punctuation\">.</span>run_until_complete<span class=\"token punctuation\">(</span>await_other_task<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token string\">'foo'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">{</span><span class=\"token string\">'bar'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'foo'</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token string\">'foo'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'foo'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">}</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> loop<span class=\"token punctuation\">.</span>run_until_complete<span class=\"token punctuation\">(</span>await_gen_task<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token string\">'foo'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">{</span><span class=\"token string\">'bar'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'foo'</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token string\">'foo'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'foo'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">[</span><span class=\"token string\">'foo'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">{</span><span class=\"token string\">'bar'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'foo'</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token string\">'foo'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'foo'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p><a href=\"https://www.pythonsheets.com/\">Acesse a ReferÃªncia original 1:</a>\n<a href=\"https://www.pythoncheatsheet.org/\">Acesse a ReferÃªncia original 2:</a></p>","frontmatter":{"title":"Python tudo sobre Generators","date":"January 05, 2020","description":""}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/python-generator/","previous":{"fields":{"slug":"/python-set/"},"frontmatter":{"title":"Python tudo sobre Sets"}},"next":{"fields":{"slug":"/0-python-cheatsheet/"},"frontmatter":{"title":"Python: Tudo o que vocÃª tinha vergonha de perguntar"}}}}}